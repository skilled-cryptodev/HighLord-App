{"version":3,"sources":["views/Home/hooks/useGetTopFarmsByApr.tsx","components/PageSection/svg/CurvedSvg.tsx","components/PageSection/CurvedDivider.tsx","components/PageSection/index.tsx","views/Home/components/Hero.tsx","views/Home/hooks/useFarmsWithBalance.tsx","views/Home/components/IconCard.tsx","views/Home/components/MetricsSection/index.tsx","hooks/api.ts","views/Home/index.tsx"],"names":["FetchStatus","sharedStyles","theme","clipPath","clipFill","css","isDark","dark","light","colors","background","ConcaveContainer","styled","Box","ConvexContainer","ConvexTop","width","height","id","clipPathUnits","d","ConvexBottom","ConcaveTop","ConcaveBottom","Wrapper","div","dividerFill","index","ComponentWrapper","CurvedDivider","dividerPosition","dividerComponent","concave","showConvexTop","showConvexBottom","showConcaveTop","showConcaveBottom","BackgroundColor","Flex","ChildrenWrapper","Container","mediaQueries","sm","lg","PageSection","children","svgFill","hasCurvedDivider","concaveDivider","containerProps","innerProps","props","getPadding","fading","keyframes","BunnyWrapper","xs","md","Background","gradients","gold","TitleWrapper","HeroText","Text","Hero","t","useTranslation","account","useWeb3React","useTheme","position","flexDirection","alignItems","justifyContent","mt","flex","color","fontSize","bold","scale","mb","src","alt","useGetTopFarmsByApr","isIntersecting","dispatch","useAppDispatch","farms","useFarms","data","useState","NOT_FETCHED","fetchStatus","setFetchStatus","topFarms","setTopFarms","cakePriceBusd","usePriceCakeBusd","useEffect","fetchFarmData","a","FETCHING","activeFarms","nonArchivedFarms","filter","farm","pid","fetchFarmsPublicDataAsync","map","SUCCESS","console","error","FAILED","farmsState","farmsWithApr","lpTotalInQuoteToken","quoteTokenPriceBusd","multiplier","totalLiquidity","times","getFarmApr","poolWeight","lpAddresses","ChainId","MAINNET","cakeRewardsApr","lpRewardsApr","apr","sortedByApr","orderBy","slice","getTopFarmsByApr","useFarmsWithBalance","farmsWithStakedBalance","setFarmsWithStakedBalance","earningsSum","setEarningsSum","fastRefresh","useRefresh","calls","farmsConfig","address","getMasterChefAddress","name","params","multicall","masterChefABI","rawResults","results","balance","BigNumber","farmsWithBalances","balanceType","gt","totalEarned","reduce","accum","earning","earningNumber","eq","DEFAULT_TOKEN_DECIMAL","toNumber","fetchBalances","StyledCard","Card","rotation","StyledCardBody","CardBody","IconCard","borderColor","borderBackground","ContentWrapper","ValueWrapper","ValueArea","ValueItemArea","ValueTitle","primary","Value","text","Space","StyledImage","img","Stats","setData","fetch","response","json","responseData","fetchData","useGetStats","tvlOnfarms","useTotalFarmValue","useTokenBalance","tokens","cake","cakeBalance","farmEarningsSum","totalSupply","useTotalSupply","burnedBalance","getBalanceNumber","useBurnedBalance","cakeSupply","mcap","mcapString","formatLocalisedCompactNumber","numTotalToCollect","useMasterchef","multipliedBy","length","tvlString","value","tvl","split","collect","toFixed","getFullDisplayBalance","ConnectWalletButton","price","marketcap","circulation","burnedamount","StyledSection","Home","Page","style","margin","MetricsSection"],"mappings":"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","file":"static/js/9.2bea9ab3.chunk.js","sourcesContent":["import { useState, useEffect } from 'react'\nimport { ChainId } from '@pancakeswap/sdk'\nimport { useFarms, usePriceCakeBusd } from 'state/farms/hooks'\nimport { useAppDispatch } from 'state'\nimport { fetchFarmsPublicDataAsync, nonArchivedFarms } from 'state/farms'\nimport { getFarmApr } from 'utils/apr'\nimport { orderBy } from 'lodash'\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\nimport { DeserializedFarm } from 'state/types'\n\nenum FetchStatus {\n  NOT_FETCHED = 'not-fetched',\n  FETCHING = 'fetching',\n  SUCCESS = 'success',\n  FAILED = 'failed',\n}\n\nconst useGetTopFarmsByApr = (isIntersecting: boolean) => {\n  const dispatch = useAppDispatch()\n  const { data: farms } = useFarms()\n  const [fetchStatus, setFetchStatus] = useState(FetchStatus.NOT_FETCHED)\n  const [topFarms, setTopFarms] = useState<FarmWithStakedValue[]>([null, null, null, null, null])\n  const cakePriceBusd = usePriceCakeBusd()\n\n  useEffect(() => {\n    const fetchFarmData = async () => {\n      setFetchStatus(FetchStatus.FETCHING)\n      const activeFarms = nonArchivedFarms.filter((farm) => farm.pid !== 0)\n      try {\n        await dispatch(fetchFarmsPublicDataAsync(activeFarms.map((farm) => farm.pid)))\n        setFetchStatus(FetchStatus.SUCCESS)\n      } catch (e) {\n        console.error(e)\n        setFetchStatus(FetchStatus.FAILED)\n      }\n    }\n\n    if (isIntersecting && fetchStatus === FetchStatus.NOT_FETCHED) {\n      fetchFarmData()\n    }\n  }, [dispatch, setFetchStatus, fetchStatus, topFarms, isIntersecting])\n\n  useEffect(() => {\n    const getTopFarmsByApr = (farmsState: DeserializedFarm[]) => {\n      const farmsWithPrices = farmsState.filter(\n        (farm) =>\n          farm.lpTotalInQuoteToken &&\n          farm.quoteTokenPriceBusd &&\n          farm.pid !== 0 &&\n          farm.multiplier &&\n          farm.multiplier !== '0X',\n      )\n      const farmsWithApr: FarmWithStakedValue[] = farmsWithPrices.map((farm) => {\n        const totalLiquidity = farm.lpTotalInQuoteToken.times(farm.quoteTokenPriceBusd)\n        const { cakeRewardsApr, lpRewardsApr } = getFarmApr(\n          farm.poolWeight,\n          cakePriceBusd,\n          totalLiquidity,\n          farm.lpAddresses[ChainId.MAINNET],\n        )\n        return { ...farm, apr: cakeRewardsApr, lpRewardsApr }\n      })\n\n      const sortedByApr = orderBy(farmsWithApr, (farm) => farm.apr + farm.lpRewardsApr, 'desc')\n      setTopFarms(sortedByApr.slice(0, 5))\n    }\n\n    if (fetchStatus === FetchStatus.SUCCESS && !topFarms[0]) {\n      getTopFarmsByApr(farms)\n    }\n  }, [setTopFarms, farms, fetchStatus, cakePriceBusd, topFarms])\n\n  return { topFarms }\n}\n\nexport default useGetTopFarmsByApr\n","import React from 'react'\nimport styled, { css, DefaultTheme } from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\nimport { ClipFill } from '../types'\n\ninterface CurveProps {\n  clipFill?: ClipFill\n}\n\ninterface ContainerProps extends CurveProps {\n  clipPath: string\n}\n\nconst sharedStyles = (theme: DefaultTheme, clipPath: string, clipFill?: ClipFill) => css`\n  width: 100%;\n  height: 20px;\n  clip-path: url(${clipPath});\n\n  background: ${() => {\n    if (theme.isDark) {\n      return clipFill?.dark || clipFill?.light || theme.colors.background\n    }\n    return clipFill?.light || theme.colors.background\n  }};\n\n  & svg {\n    display: block;\n  }\n`\n\nconst ConcaveContainer = styled(Box)<ContainerProps>`\n  ${({ theme, clipPath, clipFill }) => sharedStyles(theme, clipPath, clipFill)}\n  transform: ${({ clipPath }) => (clipPath === '#bottomConcaveCurve' ? 'translate(0, -13px)' : 'translate(0, 1px)')};\n`\n\nconst ConvexContainer = styled(Box)<ContainerProps>`\n  ${({ theme, clipPath, clipFill }) => sharedStyles(theme, clipPath, clipFill)}\n  transform: ${({ clipPath }) => (clipPath === '#bottomConvexCurve' ? 'translate(0, -13px)' : 'translate(0, -1px)')};\n`\n\nexport const ConvexTop: React.FC<CurveProps> = ({ clipFill }) => (\n  <ConvexContainer clipFill={clipFill} clipPath=\"#topConvexCurve\">\n    <svg width=\"0\" height=\"0\">\n      <defs>\n        <clipPath id=\"topConvexCurve\" clipPathUnits=\"objectBoundingBox\">\n          <path d=\"M 0,1 L 0,0 L 1,0 L 1,1 C 0.75 0, .25 0, 0 1 Z\" />\n        </clipPath>\n      </defs>\n    </svg>\n  </ConvexContainer>\n)\n\nexport const ConvexBottom: React.FC<CurveProps> = ({ clipFill }) => (\n  <ConvexContainer clipFill={clipFill} clipPath=\"#bottomConvexCurve\">\n    <svg width=\"0\" height=\"0\">\n      <defs>\n        <clipPath id=\"bottomConvexCurve\" clipPathUnits=\"objectBoundingBox\">\n          <path d=\"M 0,0 L 0,1 L 1,1 L 1,0 C .75 1, .25 1, 0 0 Z\" />\n        </clipPath>\n      </defs>\n    </svg>\n  </ConvexContainer>\n)\n\nexport const ConcaveTop: React.FC<CurveProps> = ({ clipFill }) => (\n  <ConcaveContainer clipFill={clipFill} clipPath=\"#topConcaveCurve\">\n    <svg width=\"0\" height=\"0\">\n      <defs>\n        <clipPath id=\"topConcaveCurve\" clipPathUnits=\"objectBoundingBox\">\n          <path d=\"M 0,0 L 0,1 L 1,1 L 1,0 C .75 1, .25 1, 0 0 Z\" />\n        </clipPath>\n      </defs>\n    </svg>\n  </ConcaveContainer>\n)\n\nexport const ConcaveBottom: React.FC<CurveProps> = ({ clipFill }) => (\n  <ConcaveContainer clipFill={clipFill} clipPath=\"#bottomConcaveCurve\">\n    <svg width=\"0\" height=\"0\">\n      <defs>\n        <clipPath id=\"bottomConcaveCurve\" clipPathUnits=\"objectBoundingBox\">\n          <path d=\"M 0,1 L 0,0 L 1,0 L 1,1 C .75 0.1, .25 0.1, 0 1 Z\" />\n        </clipPath>\n      </defs>\n    </svg>\n  </ConcaveContainer>\n)\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ConcaveTop, ConcaveBottom, ConvexTop, ConvexBottom } from './svg/CurvedSvg'\nimport { DividerFill, ClipFill } from './types'\n\ninterface CurvedDividerProps extends WrapperProps {\n  svgFill?: string\n  dividerComponent?: React.ReactNode\n  dividerPosition?: 'top' | 'bottom'\n  concave?: boolean\n  clipFill?: ClipFill\n}\ninterface WrapperProps {\n  index: number\n  dividerFill?: DividerFill\n}\n\nconst Wrapper = styled.div<WrapperProps>`\n  background: ${({ theme, dividerFill }) => {\n    if (theme.isDark) {\n      return dividerFill?.dark || dividerFill?.light || 'none'\n    }\n    return dividerFill?.light || dividerFill?.dark || 'none'\n  }};\n  z-index: ${({ index }) => index};\n  position: relative;\n  display: flex;\n  align-items: center;\n  width: 100%;\n`\n\nconst ComponentWrapper = styled.div<WrapperProps>`\n  z-index: ${({ index }) => index + 1};\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`\n\nconst CurvedDivider: React.FC<CurvedDividerProps> = ({\n  index,\n  dividerPosition,\n  dividerComponent,\n  concave,\n  clipFill,\n  dividerFill,\n}) => {\n  const showConvexTop = dividerPosition === 'top' && !concave\n  const showConvexBottom = dividerPosition === 'bottom' && !concave\n  const showConcaveTop = dividerPosition === 'top' && concave\n  const showConcaveBottom = dividerPosition === 'bottom' && concave\n\n  const getConcaveDivider = () => {\n    return (\n      <>\n        {showConcaveTop && <ConcaveTop clipFill={clipFill} />}\n        {showConcaveBottom && <ConcaveBottom clipFill={clipFill} />}\n      </>\n    )\n  }\n\n  const getConvexDivider = () => {\n    return (\n      <>\n        {showConvexTop && <ConvexTop clipFill={clipFill} />}\n        {showConvexBottom && <ConvexBottom clipFill={clipFill} />}\n      </>\n    )\n  }\n\n  return (\n    <Wrapper index={index} dividerFill={dividerFill}>\n      {dividerComponent && <ComponentWrapper index={index}>{dividerComponent}</ComponentWrapper>}\n      {getConcaveDivider()}\n      {getConvexDivider()}\n    </Wrapper>\n  )\n}\n\nexport default CurvedDivider\n","import React from 'react'\nimport styled from 'styled-components'\nimport { BoxProps, Box, Flex, FlexProps } from '@pancakeswap/uikit'\nimport Container from 'components/Layout/Container'\nimport CurvedDivider from './CurvedDivider'\nimport { ClipFill, DividerFill } from './types'\n\ninterface PageSectionProps extends BackgroundColorProps {\n  svgFill?: string\n  dividerComponent?: React.ReactNode\n  hasCurvedDivider?: boolean\n  dividerPosition?: 'top' | 'bottom'\n  concaveDivider?: boolean\n  containerProps?: BoxProps\n  innerProps?: BoxProps\n  clipFill?: ClipFill\n  dividerFill?: DividerFill\n}\n\ninterface BackgroundColorProps extends FlexProps {\n  index: number\n  background?: string\n  getPadding?: () => string\n}\n\nconst BackgroundColor = styled(Flex)<BackgroundColorProps>`\n  position: relative;\n  flex-direction: column;\n  align-items: center;\n  z-index: ${({ index }) => index - 1};\n`\n\nconst ChildrenWrapper = styled(Container)`\n  min-height: auto;\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 48px;\n    padding-bottom: 48px;\n  }\n`\n\nconst PageSection: React.FC<PageSectionProps> = ({\n  children,\n  background,\n  svgFill,\n  index = 1,\n  dividerComponent,\n  dividerPosition = 'bottom',\n  hasCurvedDivider = true,\n  concaveDivider = false,\n  clipFill,\n  dividerFill,\n  containerProps,\n  innerProps,\n  ...props\n}) => {\n  const getPadding = () => {\n    // No curved divider\n    if (!hasCurvedDivider) {\n      return '30px 0'\n    }\n    // Bottom curved divider\n    // Less bottom padding, as the divider is present there\n    if (dividerPosition === 'bottom') {\n      return '30px 0 14px'\n    }\n    // Top curved divider\n    // Less top padding, as the divider is present there\n    if (dividerPosition === 'top') {\n      return '14px 0 30px'\n    }\n    return '30px 0'\n  }\n\n  return (\n    <Box {...containerProps}>\n      {hasCurvedDivider && dividerPosition === 'top' && (\n        <CurvedDivider\n          svgFill={svgFill}\n          index={index}\n          concave={concaveDivider}\n          dividerPosition={dividerPosition}\n          dividerComponent={dividerComponent}\n          clipFill={clipFill}\n          dividerFill={dividerFill}\n        />\n      )}\n      <BackgroundColor background={background} index={index} getPadding={getPadding} {...props}>\n        <ChildrenWrapper {...innerProps}>{children}</ChildrenWrapper>\n      </BackgroundColor>\n      {hasCurvedDivider && dividerPosition === 'bottom' && (\n        <CurvedDivider\n          svgFill={svgFill}\n          index={index}\n          concave={concaveDivider}\n          dividerPosition={dividerPosition}\n          dividerComponent={dividerComponent}\n          clipFill={clipFill}\n          dividerFill={dividerFill}\n        />\n      )}\n    </Box>\n  )\n}\n\nexport default PageSection\n","import React from 'react'\nimport styled, { keyframes } from 'styled-components'\nimport { Link } from 'react-router-dom'\nimport { Flex, Heading, Button, Text } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useTranslation } from 'contexts/Localization'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport useTheme from 'hooks/useTheme'\nimport { SlideSvgDark, SlideSvgLight } from './SlideSvg'\nimport CompositeImage, { getSrcSet, CompositeImageProps } from './CompositeImage'\n\nconst flyingAnim = () => keyframes`\n  from {\n    transform: translate(0,  0px);\n  }\n  50% {\n    transform: translate(-5px, -5px);\n  }\n  to {\n    transform: translate(0, 0px);\n  }  \n`\n\nconst fading = () => keyframes`\n  from {\n    opacity: 0.9;\n  }\n  50% {\n    opacity: 0.1;\n  }\n  to {\n    opacity: 0.9;\n  }  \n`\n\nconst BgWrapper = styled.div`\n  z-index: -1;\n  overflow: hidden;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  bottom: 0px;\n  left: 0px;\n`\n\nconst InnerWrapper = styled.div`\n  position: absolute;\n  width: 100%;\n  bottom: -3px;\n`\n\nconst BunnyWrapper = styled.div`\n  width: 100%;\n  text-align: center;\n  margin: auto;\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    width: 80%;\n  }\n  ${({ theme }) => theme.mediaQueries.md} {\n    width: 100%;\n  }\n`\n\nconst Background = styled.div`\n  width: 100%;\n  position: absolute;\n  height: 80%;\n  background: ${({ theme }) => theme.colors.gradients.gold};\n  border-radius: 25px;\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    border-radius: 10px;\n    height: 110%;\n  }\n  ${({ theme }) => theme.mediaQueries.md} {\n    border-radius: 25px;\n    height: 80%;\n  }\n`\n\nconst TitleWrapper = styled(Flex)`\n  z-index: 1;\n  margin-left: 40px;\n  ${({ theme }) => theme.mediaQueries.xs} {\n    text-align: center;\n    margin-left: 0px;\n  }\n  ${({ theme }) => theme.mediaQueries.lg} {\n    text-align: left;\n    margin-left: 40px;\n  }\n`\n\nconst ButtonWrapper = styled(Flex)`\n  z-index: 1;\n  margin-left: 40px;\n  ${({ theme }) => theme.mediaQueries.xs} {\n    margin: auto;\n  }\n  ${({ theme }) => theme.mediaQueries.lg} {\n    margin-left: 40px;\n  }\n`\n\nconst HeroText = styled(Text)`\n  font-size: 50px;\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    font-size: 30px;\n  }\n  ${({ theme }) => theme.mediaQueries.sm} {\n    font-size: 40px;\n  }\n  ${({ theme }) => theme.mediaQueries.lg} {\n    font-size: 50px;\n  }\n`\n\nconst Wrapper = styled(Flex)`\n  align-self: center;\n`\n\nconst StarsWrapper = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n\n  & :nth-child(2) {\n    animation: ${fading} 2s ease-in-out infinite;\n    animation-delay: 1s;\n  }\n\n  & :nth-child(3) {\n    animation: ${fading} 5s ease-in-out infinite;\n    animation-delay: 0.66s;\n  }\n\n  & :nth-child(4) {\n    animation: ${fading} 2.5s ease-in-out infinite;\n    animation-delay: 0.33s;\n  }\n`\n\nconst imagePath = '/images/home/lunar-bunny/'\nconst imageSrc = 'bunny'\n\nconst starsImage: CompositeImageProps = {\n  path: '/images/home/lunar-bunny/',\n  attributes: [\n    { src: 'star-l', alt: '3D Star' },\n    { src: 'star-r', alt: '3D Star' },\n    { src: 'star-top-r', alt: '3D Star' },\n  ],\n}\n\nconst Hero = () => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { theme } = useTheme()\n\n  return (\n    <>\n      <Flex\n        position=\"relative\"\n        flexDirection={['column-reverse', null, null, 'row']}\n        alignItems={['flex-end', null, null, 'center']}\n        justifyContent=\"center\"\n        mt={[account ? '280px' : '50px', null, 0]}\n        id=\"homepage-hero\"\n      >\n        <Background />\n        <Wrapper flexDirection=\"column\">\n          <TitleWrapper flex=\"1\" flexDirection=\"column\">\n            <HeroText color=\"textSubtle\" fontSize=\"50px\" bold>\n              {t('HighLord Farm')}\n            </HeroText>\n            <Heading scale=\"lg\" color=\"textSubtle\" mb=\"20px\">\n               {t('The Best Defi Protocol. Creating value perpetually.')}\n            </Heading>\n          </TitleWrapper>\n        </Wrapper>\n        <Flex\n          height={['100%', null, null, '100%']}\n          width={['100%', null, null, '100%']}\n          flex={[null, null, null, '1']}\n          mb={['24px', null, null, '0']}\n          position=\"relative\"\n        >\n          <BunnyWrapper>\n            <img src=\"images/home/highlord.png\" alt={t('welcome')} />\n          </BunnyWrapper>\n        </Flex>\n      </Flex>\n    </>\n  )\n}\n\nexport default Hero\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport multicall from 'utils/multicall'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\nimport masterChefABI from 'config/abi/masterchef.json'\nimport { farmsConfig } from 'config/constants'\nimport { SerializedFarmConfig } from 'config/constants/types'\nimport useRefresh from 'hooks/useRefresh'\nimport { DEFAULT_TOKEN_DECIMAL } from 'config'\n\nexport interface FarmWithBalance extends SerializedFarmConfig {\n  balance: BigNumber\n}\n\nconst useFarmsWithBalance = () => {\n  const [farmsWithStakedBalance, setFarmsWithStakedBalance] = useState<FarmWithBalance[]>([])\n  const [earningsSum, setEarningsSum] = useState<number>(null)\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalances = async () => {\n      const calls = farmsConfig.map((farm) => ({\n        address: getMasterChefAddress(),\n        name: 'pendingHIGHLORD',\n        params: [farm.pid, account],\n      }))\n\n      const rawResults = await multicall(masterChefABI, calls)\n      const results = farmsConfig.map((farm, index) => ({ ...farm, balance: new BigNumber(rawResults[index]) }))\n      const farmsWithBalances = results.filter((balanceType) => balanceType.balance.gt(0))\n      const totalEarned = farmsWithBalances.reduce((accum, earning) => {\n        const earningNumber = new BigNumber(earning.balance)\n        if (earningNumber.eq(0)) {\n          return accum\n        }\n        return accum + earningNumber.div(DEFAULT_TOKEN_DECIMAL).toNumber()\n      }, 0)\n\n      setFarmsWithStakedBalance(farmsWithBalances)\n      setEarningsSum(totalEarned)\n    }\n\n    if (account) {\n      fetchBalances()\n    }\n  }, [account, fastRefresh])\n\n  return { farmsWithStakedBalance, earningsSum }\n}\n\nexport default useFarmsWithBalance\n","import React, { ReactNode } from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody, Box, CardProps } from '@pancakeswap/uikit'\n\nconst StyledCard = styled(Card)<{ background: string; rotation?: string }>`\n  height: fit-content;\n  box-sizing: border-box;\n  width: 95%;\n  max-width: 350px;\n  text-align: center;\n  margin: auto;\n  margin-bottom: 10px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    ${({ rotation }) => (rotation ? `transform: rotate(${rotation});` : '')}\n  }\n`\n\nconst StyledCardBody = styled(CardBody)`\n  padding: 15px;\n`\n\nconst IconWrapper = styled(Box)<{ rotation?: string }>`\n  ${({ theme }) => theme.mediaQueries.md} {\n    ${({ rotation }) => (rotation ? `transform: rotate(${rotation});` : '')}\n  }\n`\n\ninterface IconCardProps extends IconCardData, CardProps {\n  children: ReactNode\n}\n\nexport interface IconCardData {\n  background?: string\n  borderColor?: string\n  rotation?: string\n}\n\nconst IconCard: React.FC<IconCardProps> = ({ background, borderColor, rotation, children, ...props }) => {\n  return (\n    <StyledCard background={background} borderBackground={borderColor} rotation={rotation} {...props}>\n      <StyledCardBody>\n        {children}\n      </StyledCardBody>\n    </StyledCard>\n  )\n}\n\nexport default IconCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Flex, Text, Skeleton, ChartIcon, CommunityIcon, SwapIcon } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport useIntersectionObserver from 'hooks/useIntersectionObserver'\nimport useGetTopFarmsByApr from 'views/Home/hooks/useGetTopFarmsByApr'\nimport useTokenBalance, { FetchStatus, useGetBnbBalance, useTotalSupply, useBurnedBalance } from 'hooks/useTokenBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport { useGetStats } from 'hooks/api'\nimport useTheme from 'hooks/useTheme'\nimport { usePriceCakeBusd, useTotalFarmValue } from 'state/farms/hooks'\nimport { useMasterchef } from 'hooks/useContract'\nimport { harvestFarm } from 'utils/calls'\nimport Balance from 'components/Balance'\nimport useFarmsWithBalance from 'views/Home/hooks/useFarmsWithBalance'\nimport { getBalanceNumber, getFullDisplayBalance, formatBigNumber, formatLocalisedCompactNumber } from 'utils/formatBalance'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport tokens from 'config/constants/tokens'\nimport IconCard, { IconCardData } from '../IconCard'\nimport StatCardContent from './StatCardContent'\nimport GradientLogo from '../GradientLogoSvg'\n\nconst ContentWrapper = styled(Flex)`\n  flex-direction: column;\n  min-height: 350px;\n  align-items: center;\n  justify-content: center;\n`\n\nconst ValueWrapper = styled(Flex)`\n  flex-direction: column;\n  min-height: 350px;\n  align-items: center;\n  justify-content: center;\n  padding: 10px;\n`\n\nconst ValueArea = styled(Flex)`\n  flex-direction: column;\n  width: 100%;\n  text-align: start;\n`\n\nconst ValueItemArea = styled(Flex)`\n  flex-direction: column;\n  width: 100%;\n  margin-bottom: 10px;\n`\n\nconst ValueTitle = styled(Text)`\n  color: ${({theme}) => theme.colors.primary};\n  font-size: 16px;\n  font-weight: bold;\n`\n\nconst Value = styled(Text)`\n  color: ${({theme}) => theme.colors.text};\n  font-size: 24px;\n`\n\nconst Space = styled.div`\n  background: linear-gradient(90deg, rgb(255, 255, 255) 0%, rgb(0, 0, 0) 50%, rgb(255, 255, 255) 100%);\n  opacity: 0.4;\n  height: 1px;\n  width: 100%;\n  margin-bottom: 16px;\n`\n\nconst StyledImage = styled.img`\n  width: 60px;\n  margin-top: -10px;\n  margin-right: 10px;\n`\n\n// Values fetched from bitQuery effective 6/9/21\nconst txCount = 30841921\nconst addressCount = 2751624\n\nconst Stats = () => {\n  const { t } = useTranslation()\n  const data = useGetStats()\n  const { theme } = useTheme()\n\n  const { topFarms } = useGetTopFarmsByApr(true)\n  const tvlOnfarms = useTotalFarmValue()\n\n  const { account } = useWeb3React()\n  const { balance: cakeBalance, fetchStatus: cakeFetchStatus } = useTokenBalance(tokens.cake.address)\n\n  const { farmsWithStakedBalance, earningsSum: farmEarningsSum } = useFarmsWithBalance()\n\n  const totalSupply = useTotalSupply()\n  const burnedBalance = getBalanceNumber(useBurnedBalance(tokens.cake.address))\n  const cakeSupply = totalSupply ? getBalanceNumber(totalSupply) - burnedBalance : 0\n  const cakePriceBusd = usePriceCakeBusd()\n  const mcap = cakePriceBusd.times(cakeSupply)\n  const mcapString = formatLocalisedCompactNumber(mcap.toNumber())\n\n  const masterChefContract = useMasterchef()\n  const earningsBusd = new BigNumber(farmEarningsSum).multipliedBy(cakePriceBusd)\n  const numTotalToCollect = farmsWithStakedBalance.length\n  const numFarmsToCollect = farmsWithStakedBalance.filter((value) => value.pid !== 100).length\n  const hasCakePoolToCollect = numTotalToCollect - numFarmsToCollect > 0\n\n  const tvlString = data ? formatLocalisedCompactNumber(tvlOnfarms.toNumber()) : '-'\n  const trades = formatLocalisedCompactNumber(txCount)\n  const users = formatLocalisedCompactNumber(addressCount)\n\n  const tvlText = t('And those users are now entrusting the platform with over $%tvl% in funds.', { tvl: tvlString })\n  const [entrusting, inFunds] = tvlText.split(tvlString)\n\n  return (\n    <Flex justifyContent=\"center\" alignItems=\"center\" flexDirection=\"column\">\n      <Flex flexDirection={['column', null, null, 'row']} justifyContent=\"space-between\" width=\"100%\">\n        <IconCard>\n          <Flex width=\"100%\" justifyContent=\"start\">\n            <Text fontSize=\"28px\" bold mt=\"10px\">{t('Farms & Staking')}</Text>\n          </Flex>\n          <ValueWrapper>\n            <ValueArea mb=\"20px\">\n              <Flex alignItems=\"center\">\n                <StyledImage src=\"/images/home/harvest.svg\" alt=\"havest\" />\n                <ValueItemArea>\n                  <ValueTitle>{t('HIGHLORD to Harvest')}</ValueTitle>\n                  <Value>{t('%collect%', { collect: numTotalToCollect.toFixed(3) })}</Value>\n                </ValueItemArea>\n              </Flex>\n              <Space />\n              <Flex alignItems=\"center\">\n                <StyledImage src=\"/images/home/wallet.svg\" alt=\"wallet\" />\n                <ValueItemArea>\n                  <ValueTitle>{t('HIGHLORD to Wallet')}</ValueTitle>\n                  <Value>{getFullDisplayBalance(cakeBalance, 18, 3)}</Value>\n                </ValueItemArea>\n              </Flex>\n            </ValueArea>\n            <Flex width=\"100%\" justifyContent=\"center\">\n              <ConnectWalletButton width=\"70%\" />\n            </Flex>\n          </ValueWrapper>\n        </IconCard>\n        <IconCard>\n          <Flex width=\"100%\" justifyContent=\"start\">\n            <Text fontSize=\"28px\" bold mt=\"10px\">{t('HIGHLORD Status')}</Text>\n          </Flex>\n          <ValueWrapper>\n            <ValueArea>\n              <Flex alignItems=\"center\">\n                <StyledImage src=\"/images/home/price.svg\" alt=\"price\" />\n                <ValueItemArea>\n                  <ValueTitle>{t('HIGHLORD Price')}</ValueTitle>\n                  <Value>{t('$%price%', { price: cakePriceBusd.toFixed(3) })}</Value>\n                </ValueItemArea>\n              </Flex>\n              <Space />\n              <Flex alignItems=\"center\">\n                <StyledImage src=\"/images/home/market.svg\" alt=\"market\" />\n                <ValueItemArea>\n                  <ValueTitle>{t('HIGHLORD Market Cap')}</ValueTitle>\n                  <Value>{t('$%marketcap%', { marketcap: mcapString })}</Value>\n                </ValueItemArea>\n              </Flex>\n              <Space />\n            </ValueArea>\n            <ValueArea>\n              <Flex alignItems=\"center\">\n                <StyledImage src=\"/images/home/circulation.svg\" alt=\"circulation\" />\n                <ValueItemArea>\n                  <ValueTitle>{t('HIGHLORD in Circulation')}</ValueTitle>\n                  <Value>{t('%circulation%', { circulation: cakeSupply.toFixed(3) })}</Value>\n                </ValueItemArea>\n              </Flex>\n              <Space />\n              <Flex alignItems=\"center\">\n                <StyledImage src=\"/images/home/burn.svg\" alt=\"burn\" />\n                <ValueItemArea>\n                  <ValueTitle>{t('HIGHLORD Burned')}</ValueTitle>\n                  <Value>{t('%burnedamount%', { burnedamount: burnedBalance.toFixed(3) })}</Value>\n                </ValueItemArea>\n              </Flex>\n            </ValueArea>\n          </ValueWrapper>\n        </IconCard>\n        <IconCard>\n          <Flex width=\"100%\" justifyContent=\"start\">\n            <Text fontSize=\"28px\" bold mt=\"10px\">{t('Total Value Locked')}</Text>\n          </Flex>\n          <ContentWrapper>\n            <Text color=\"primary\" bold>{t('(TVL)')}</Text>\n            <Text fontSize=\"46px\">{t('$%tvl%', { tvl: tvlString })}</Text>\n          </ContentWrapper>\n        </IconCard>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default Stats\n","import { useEffect, useState } from 'react'\n\n/* eslint-disable camelcase */\nexport interface DeBankTvlResponse {\n  id: string\n  chain: string\n  name: string\n  site_url: string\n  logo_url: string\n  has_supported_portfolio: boolean\n  tvl: number\n}\n\nexport const useGetStats = () => {\n  const [data, setData] = useState<DeBankTvlResponse | null>(null)\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('https://openapi.debank.com/v1/protocol?id=bsc_pancakeswap')\n        const responseData: DeBankTvlResponse = await response.json()\n\n        setData(responseData)\n      } catch (error) {\n        console.error('Unable to fetch data:', error)\n      }\n    }\n\n    fetchData()\n  }, [setData])\n\n  return data\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport PageSection from 'components/PageSection'\nimport { useWeb3React } from '@web3-react/core'\nimport useTheme from 'hooks/useTheme'\nimport Container from 'components/Layout/Container'\nimport { PageMeta } from 'components/Layout/Page'\nimport Hero from './components/Hero'\nimport { searchSectionData, financeSectionData, tokenomicsSectionData, globeSectionData } from './components/SalesSection/data'\nimport MetricsSection from './components/MetricsSection'\nimport SalesSection from './components/SalesSection'\nimport WinSection from './components/WinSection'\nimport FarmsPoolsRow from './components/FarmsPoolsRow'\nimport Footer from './components/Footer'\nimport CakeDataRow from './components/CakeDataRow'\nimport { WedgeTopLeft, InnerWedgeWrapper, OuterWedgeWrapper, WedgeTopRight } from './components/WedgeSvgs'\nimport UserBanner from './components/UserBanner'\n\nconst StyledSection = styled(PageSection)`\n  padding-top: 0px;\n`\n\nconst UserBannerWrapper = styled(Container)`\n  z-index: 1;\n  position: absolute;\n  width: 100%;\n  top: 0;\n  left: 50%;\n  transform: translate(-50%, 0);\n  padding-left: 0px;\n  padding-right: 0px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-left: 24px;\n    padding-right: 24px;\n  }\n`\n\nconst Home: React.FC = () => {\n  const { theme } = useTheme()\n  const { account } = useWeb3React()\n\n  const HomeSectionContainerStyles = { margin: '0', width: '100%', maxWidth: '1100px' }\n\n  return (\n    <>\n      <PageMeta />\n      <StyledSection\n        innerProps={{ style: { margin: '0', width: '100%' } }}\n        index={2}\n        hasCurvedDivider={false}\n      >\n        <Hero />\n      </StyledSection>\n      <StyledSection\n        innerProps={{ style: { margin: '0', width: '100%' } }}\n        index={2}\n        hasCurvedDivider={false}\n      >\n        <MetricsSection />\n      </StyledSection>\n    </>\n  )\n}\n\nexport default Home\n"],"sourceRoot":""}