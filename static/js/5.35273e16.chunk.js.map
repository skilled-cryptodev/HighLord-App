{"version":3,"sources":["components/Layout/Flex.tsx","components/Select/Select.tsx","hooks/useIntersectionObserver.ts","utils/latinise.ts","components/SearchInput/SearchInput.tsx","components/Loading.tsx","components/ExpandableSectionButton/ExpandableSectionButton.tsx","components/RoiCalculatorModal/useRoiCalculatorReducer.ts","utils/getLiquidityUrlPathParts.ts","views/Farms/components/FarmCard/DetailsSection.tsx","components/TokenImage/index.tsx","views/Farms/components/FarmCard/CardHeading.tsx","components/Balance.tsx","components/RoiCalculatorModal/RoiCalculatorFooter.tsx","components/RoiCalculatorModal/RoiCard.tsx","components/RoiCalculatorModal/AnimatedArrow.tsx","components/RoiCalculatorModal/index.tsx","views/Farms/components/DepositModal.tsx","views/Farms/components/WithdrawModal.tsx","views/Farms/hooks/useUnstakeFarms.ts","views/Farms/hooks/useStakeFarms.ts","views/Farms/components/FarmCard/StakeAction.tsx","views/Farms/hooks/useHarvestFarm.ts","views/Farms/components/FarmCard/HarvestAction.tsx","views/Farms/hooks/useApproveFarm.ts","views/Farms/components/FarmCard/CardActionsContainer.tsx","views/Farms/components/FarmCard/ApyButton.tsx","views/Farms/components/FarmCard/FarmCard.tsx","hooks/useDelayedUnmount.ts","views/Farms/components/FarmTable/Apr.tsx","views/Farms/components/FarmTable/Farm.tsx","views/Farms/components/FarmTable/Earned.tsx","views/Farms/components/FarmTable/Details.tsx","views/Farms/components/FarmTable/Multiplier.tsx","views/Farms/components/FarmTable/Liquidity.tsx","components/Tags.tsx","views/Farms/components/FarmTable/Actions/styles.ts","views/Farms/components/FarmTable/Actions/HarvestAction.tsx","views/Farms/components/FarmTable/Actions/StakedAction.tsx","views/Farms/components/FarmTable/Actions/ActionPanel.tsx","views/Farms/components/FarmTable/CellLayout.tsx","views/Farms/components/types.ts","views/Farms/components/FarmTable/Row.tsx","views/Farms/components/FarmTable/FarmTable.tsx","views/Farms/components/FarmTabButtons/index.tsx","views/Farms/components/ToggleView/ToggleView.tsx","views/Farms/Farms.tsx","../node_modules/react-countup/build/index.js","../node_modules/countup.js/dist/countUp.min.js"],"names":["FlexLayout","styled","div","DropDownHeader","theme","shadows","inset","colors","inputSecondary","input","DropDownListContainer","zIndices","dropdown","mediaQueries","sm","DropDownContainer","Box","props","isOpen","css","tooltip","boxShadow","DropDownList","ul","ListItem","li","Select","options","onOptionChange","defaultOptionIndex","dropdownRef","useRef","useState","setIsOpen","selectedOptionIndex","setSelectedOptionIndex","toggling","event","stopPropagation","useEffect","handleClickOutside","document","addEventListener","removeEventListener","onClick","label","color","ref","map","option","index","selectedIndex","useIntersectionObserver","observerRef","intersectionObserverRef","observerIsSet","setObserverIsSet","isIntersecting","setIsIntersecting","current","IntersectionObserver","entry","rootMargin","threshold","observe","disconnect","Latinise","latin_map","τ","Τ","latinise","replace","x","StyledInput","Input","InputWrapper","SearchInput","onChangeCallback","onChange","placeholder","searchText","setSearchText","t","useTranslation","debouncedOnChange","useMemo","debounce","e","value","target","Loading","Wrapper","primary","ExpandableSectionButton","expanded","role","bold","defaultProps","EditingCurrency","CalculatorMode","getLiquidityUrlPathParts","quoteTokenAddress","tokenAddress","wBnbAddress","tokens","wbnb","address","secondPart","StyledLinkExternal","LinkExternal","DetailsSection","bscScanAddress","infoAddress","removed","lpLabel","totalValueFormatted","addLiquidityUrl","href","symbol","getImageUrlFromToken","token","TokenPairImage","primaryToken","secondaryToken","primarySrc","secondarySrc","Flex","StyledImage","Tag","img","CardHeading","multiplier","isCommunityFarm","quoteToken","pathname","useLocation","justifyContent","alignItems","mb","variant","width","height","src","alt","flexDirection","split","Balance","decimals","isDisabled","unit","prefix","previousValue","start","end","suffix","duration","separator","Footer","background","backgroundAlt","BulletList","textSubtle","RoiCalculatorFooter","isFarm","apr","displayApr","autoCompoundFrequency","linkLabel","linkHref","performanceFee","isExpanded","setIsExpanded","useTooltip","my","placement","tooltipOffset","multiplierRef","targetRef","multiplierTooltip","multiplierTooltipVisible","tooltipVisible","gridRowCount","apy","getApy","toFixed","p","prev","px","gridTemplateColumns","gridRowGap","gridTemplateRows","small","textAlign","compoundTimes","mr","fontSize","display","mt","fee","compoundingIndexToFrequency","initialState","controls","compounding","compoundingFrequency","activeCompoundingIndex","stakingDuration","mode","ROI_BASED_ON_PRINCIPAL","editingCurrency","USD","data","principalAsToken","principalAsUSD","roiUSD","roiTokens","roiPercentage","roiCalculatorReducer","state","action","type","payload","toggledCompounding","PRINCIPAL_BASED_ON_ROI","parseFloat","currencyAfterChange","TOKEN","useRoiCalculatorReducer","stakingTokenPrice","earningTokenPrice","useReducer","dispatch","principalInUSDAsNumber","compoundFrequency","interestBreakdown","getInterestBreakdown","principalInUSD","hasInterest","Number","isNaN","roiAsUSD","getRoi","amountEarned","amountInvested","principalForExpectedRoi","getPrincipalForInterest","principalUSD","principalToken","BigNumber","setPrincipalFromUSDValue","amount","principalAsTokenBN","gt","setPrincipalFromTokenValue","useCallback","principalAsUsdBN","times","principalAsUsdString","setStakingDuration","stakingDurationIndex","toggleCompounding","toggleEditingCurrency","setCompoundingFrequency","setCalculatorMode","modeToSet","setTargetRoi","targetRoiAsTokens","toNumber","MILLION","RoiCardWrapper","RoiCardInner","radii","default","RoiInputContainer","RoiDisplayContainer","RoiDollarAmount","Text","fadeOut","RoiCard","earningTokenSymbol","calculatorState","inputRef","focus","onEnterEditing","textTransform","inputMode","pattern","scale","currentTarget","toLocaleString","minimumFractionDigits","maximumFractionDigits","rotate","keyframes","ArrowContainer","AnimatedArrow","key","setKey","prevKey","prevId","parseInt","StyledModal","Modal","ScrollableContainer","FullWidthButtonMenu","ButtonMenu","disabled","RoiCalculatorModal","onDismiss","onBack","stakingTokenBalance","stakingTokenSymbol","initialValue","account","useActiveWeb3React","balanceInputRef","assetSymbol","editingUnit","editingValue","conversionUnit","conversionValue","onUserInput","console","log","title","asset","currencyValue","innerRef","switchEditingUnits","onFocus","lte","getBalanceNumber","toString","toLocaleUpperCase","activeIndex","onItemClick","flex","checked","AnnualRoiContainer","AnnualRoiDisplay","DepositModal","max","stakedBalance","onConfirm","tokenName","lpPrice","cakePrice","isTokenOnly","val","setVal","useToast","toastSuccess","toastError","pendingTx","setPendingTx","showRoiCalculator","setShowRoiCalculator","fullBalance","getFullDisplayBalance","lpTokensToStake","fullBalanceNumber","usdToStake","annualRoi","formattedAnnualRoi","formatNumber","handleChange","validity","valid","handleSelectMax","plus","onSelectMax","inputTitle","isFinite","eq","a","error","style","alignSelf","WithdrawModal","valNumber","useUnstakeFarms","pid","masterChefContract","useMasterchef","onUnstake","unstakeFarm","useStakeFarms","onStake","stakeFarm","txHash","info","IconButtonWrapper","StakeAction","tokenBalance","location","useAppDispatch","useWeb3React","useLpTokenPrice","handleStake","fetchFarmUserDataAsync","pids","handleUnstake","displayBalance","stakedBalanceBigNumber","getBalanceAmount","lt","ROUND_DOWN","useModal","onPresentDeposit","onPresentWithdraw","some","item","includes","useHarvestFarm","farmPid","onReward","harvestFarm","HarvestAction","earnings","usePriceCakeBusd","rawEarningsBalance","BIG_ZERO","earningsBusd","multipliedBy","useApproveFarm","lpContract","callWithGasPrice","useCallWithGasPrice","onApprove","ethers","constants","MaxUint256","tx","wait","receipt","status","Action","StyledFlex","text","CardActions","farm","requestedApproval","setRequestedApproval","lpAddresses","userData","allowance","lpAddress","getAddress","isApproved","isGreaterThan","useERC20","handleApprove","pr","lpSymbol","ConnectWalletButton","ApyLabelContainer","ApyButton","useFarmUser","onPresentApyModal","StyledCard","Card","FarmCardInnerContainer","ExpandingWrapper","cardBorder","StyledValue","FarmCard","showExpandableSection","setShowExpandableSection","liquidity","undefined","toUpperCase","earnLabel","dual","liquidityUrlPathParts","BASE_ADD_LIQUIDITY_URL","isPromotedFarm","isActive","isCommunity","getBscScanLink","CardActionsContainer","useDelayedUnmount","isMounted","delayTime","shouldRender","setShouldRender","timeoutId","setTimeout","clearTimeout","Container","AprWrapper","Apr","originalValue","hideButton","TokenWrapper","Farm","Amount","span","earned","Earned","userDataReady","ArrowIcon","ChevronDownIcon","toggled","Details","actionPanelToggled","isDesktop","useMatchBreakpoints","ReferenceElement","MultiplierWrapper","lg","Multiplier","displayMultiplier","toLowerCase","tooltipContent","LiquidityWrapper","Liquidity","displayLiquidity","CoreTag","outline","startIcon","CommunityTag","DualTag","ActionContainer","xl","ActionTitles","ActionContent","earningsBigNumber","isZero","ml","Staked","marginBottom","marginTop","expandAnimation","collapseAnimation","StakeContainer","TagsContainer","InfoContainer","ValueContainer","ValueWrapper","ActionPanel","details","bsc","StakedAction","Label","ContentContainer","Layout","CellLayout","children","MobileColumnSchema","id","name","sortable","DesktopColumnSchema","cells","CellInner","StyledTr","tr","EarnedMobileCell","td","AprMobileCell","FarmMobileCell","Row","hasStakedAmount","actionPanelExpanded","setActionPanelExpanded","shouldRenderChild","toggleActionPanel","isMobile","isSmallerScreen","tableSchema","columnNames","column","Object","keys","columnIndex","indexOf","React","createElement","colSpan","card","dropShadow","TableWrapper","StyledTable","table","TableBody","tbody","TableContainer","ScrollButtonContainer","FarmTable","tableWrapperEl","columns","rows","useTable","sortColumn","row","original","scrollIntoView","behavior","FarmTabButtons","hasStakeInFinishedFarms","url","useRouteMatch","as","Link","to","show","ToggleView","viewMode","onToggle","handleToggle","ViewMode","CARD","TABLE","ControlContainer","ToggleWrapper","LabelWrapper","FilterContainer","ViewControls","getDisplayApr","Image","cakeRewardsApr","lpRewardsApr","Farms","farmsProps","path","useFarms","farmsLP","userDataLoaded","blockPrice","usePriceBlockBusd","query","setQuery","useUserFarmsViewMode","setViewMode","sortOption","setSortOption","chosenFarmsLength","tokenMode","isArchived","isInactive","usePollFarmsWithUserData","useUserFarmStakedOnly","stakedOnly","setStakedOnly","activeFarms","filter","isArchivedPid","inactiveFarms","archivedFarms","stakedOnlyFarms","stakedInactiveFarms","stakedArchivedFarms","farmsList","farmsToDisplay","farmsToDisplayWithAPR","lpTotalInQuoteToken","quoteTokenPriceBusd","totalLiquidity","getFarmApr","poolWeight","ChainId","MAINNET","price","BIG_TEN","pow","tokenPriceBusd","lowercaseQuery","numberOfFarmsVisible","setNumberOfFarmsVisible","chosenFarmsMemoized","chosenFarms","farms","orderBy","slice","sortFarms","length","farmsCurrentlyVisible","rowData","Page","PageHeader","marginLeft","sort","b","exact","renderContent","defineProperty","exports","PropTypes","require","warning","CountUp$1","_interopDefaultLegacy","PropTypes__default","React__default","warning__default","CountUp__default","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","i","arguments","source","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","_classCallCheck","instance","Constructor","TypeError","_defineProperties","descriptor","configurable","writable","obj","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_setPrototypeOf","_assertThisInitialized","self","ReferenceError","_possibleConstructorReturn","call","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","prototype","valueOf","_isNativeReflectConstruct","result","Super","NewTarget","this","constructor","_slicedToArray","arr","Array","isArray","_arrayWithHoles","_i","Symbol","iterator","_s","_e","_arr","_n","_d","next","done","err","_iterableToArrayLimit","minLen","_arrayLikeToArray","n","from","test","_unsupportedIterableToArray","_nonIterableRest","len","arr2","createCountUpInstance","el","decimal","easingFn","formattingFn","useEasing","useGrouping","CountUp","_Component","subClass","superClass","create","_inherits","protoProps","staticProps","_super","_this","_len","args","_key","concat","updatedProps","_this$props","redraw","className","containerRef","HTMLElement","SVGTextElement","SVGTSpanElement","_assertThisInitialize","reset","restart","update","onPauseResume","pauseResume","_assertThisInitialize2","onReset","_assertThisInitialize3","_this$props2","delay","onEnd","onStart","run","newEnd","_assertThisInitialize4","onUpdate","createRef","_this$props3","createInstance","nextProps","checkProps","prevProps","_this$props4","preserveValue","_this$props5","countUpRef","Component","string","number","func","isRequired","bool","startOnMount","MOCK_ELEMENT","innerHTML","useCountUp","_props","_useState2","count","setCount","timerRef","getCountUp","countUp","newCountUp","formattingFnRef","define","r","s","Math","abs","l","numerals","u","version","m","hasOwnProperty","d","c","f","window","requestAnimationFrame","cancelAnimationFrame","Date","getTime","initialize","initialized","getElementById","startVal","endVal","dec","countDown","frameVal","printValue","tagName","textContent","startTime","timestamp","remaining","round","rAF","callback","paused"],"mappings":"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","file":"static/js/5.35273e16.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","import React, { useState, useRef, useEffect } from 'react'\nimport styled, { css } from 'styled-components'\nimport { ArrowDropDownIcon, Box, BoxProps, Text } from '@pancakeswap/uikit'\n\nconst DropDownHeader = styled.div`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0px 16px;\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n  border-radius: 16px;\n  background: ${({ theme }) => theme.colors.input};\n  transition: border-radius 0.15s;\n`\n\nconst DropDownListContainer = styled.div`\n  min-width: 136px;\n  height: 0;\n  position: absolute;\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.input};\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n  transition: transform 0.15s, opacity 0.15s;\n  transform: scaleY(0);\n  transform-origin: top;\n  opacity: 0;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n`\n\nconst DropDownContainer = styled(Box)<{ isOpen: boolean }>`\n  cursor: pointer;\n  width: 100%;\n  position: relative;\n  background: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  height: 40px;\n  min-width: 136px;\n  user-select: none;\n  z-index: 20;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n\n  ${(props) =>\n    props.isOpen &&\n    css`\n      ${DropDownHeader} {\n        border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n        border-radius: 16px 16px 0 0;\n      }\n\n      ${DropDownListContainer} {\n        height: auto;\n        transform: scaleY(1);\n        opacity: 1;\n        border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        border-top-width: 0;\n        border-radius: 0 0 16px 16px;\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n      }\n    `}\n\n  svg {\n    position: absolute;\n    right: 16px;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`\n\nconst DropDownList = styled.ul`\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n`\n\nconst ListItem = styled.li`\n  list-style: none;\n  padding: 8px 16px;\n  &:hover {\n    background: ${({ theme }) => theme.colors.inputSecondary};\n  }\n`\n\nexport interface SelectProps extends BoxProps {\n  options: OptionProps[]\n  onOptionChange?: (option: OptionProps) => void\n  defaultOptionIndex?: number\n}\n\nexport interface OptionProps {\n  label: string\n  value: any\n}\n\nconst Select: React.FunctionComponent<SelectProps> = ({\n  options,\n  onOptionChange,\n  defaultOptionIndex = 0,\n  ...props\n}) => {\n  const dropdownRef = useRef(null)\n  const [isOpen, setIsOpen] = useState(false)\n  const [selectedOptionIndex, setSelectedOptionIndex] = useState(defaultOptionIndex)\n\n  const toggling = (event: React.MouseEvent<HTMLDivElement>) => {\n    setIsOpen(!isOpen)\n    event.stopPropagation()\n  }\n\n  const onOptionClicked = (selectedIndex: number) => () => {\n    setSelectedOptionIndex(selectedIndex)\n    setIsOpen(false)\n\n    if (onOptionChange) {\n      onOptionChange(options[selectedIndex])\n    }\n  }\n\n  useEffect(() => {\n    const handleClickOutside = () => {\n      setIsOpen(false)\n    }\n\n    document.addEventListener('click', handleClickOutside)\n    return () => {\n      document.removeEventListener('click', handleClickOutside)\n    }\n  }, [])\n\n  return (\n    <DropDownContainer isOpen={isOpen} {...props}>\n      <DropDownHeader onClick={toggling}>\n        <Text>{options[selectedOptionIndex].label}</Text>\n      </DropDownHeader>\n      <ArrowDropDownIcon color=\"text\" onClick={toggling} />\n      <DropDownListContainer>\n        <DropDownList ref={dropdownRef}>\n          {options.map((option, index) =>\n            index !== selectedOptionIndex ? (\n              <ListItem onClick={onOptionClicked(index)} key={option.label}>\n                <Text>{option.label}</Text>\n              </ListItem>\n            ) : null,\n          )}\n        </DropDownList>\n      </DropDownListContainer>\n    </DropDownContainer>\n  )\n}\n\nexport default Select\n","import { useEffect, useRef, useState } from 'react'\n\nconst useIntersectionObserver = () => {\n  const observerRef = useRef<HTMLDivElement>(null)\n  const intersectionObserverRef = useRef<IntersectionObserver>(null)\n  const [observerIsSet, setObserverIsSet] = useState(false)\n  const [isIntersecting, setIsIntersecting] = useState(false)\n\n  useEffect(() => {\n    const checkObserverIsIntersecting = ([entry]: IntersectionObserverEntry[]) => {\n      setIsIntersecting(entry.isIntersecting)\n    }\n\n    if (!observerIsSet) {\n      intersectionObserverRef.current = new IntersectionObserver(checkObserverIsIntersecting, {\n        rootMargin: '0px',\n        threshold: 1,\n      })\n      intersectionObserverRef.current.observe(observerRef.current)\n      setObserverIsSet(true)\n    }\n\n    return () => {\n      if (intersectionObserverRef.current && observerIsSet) {\n        intersectionObserverRef.current.disconnect()\n      }\n    }\n  }, [observerIsSet])\n\n  return { observerRef, isIntersecting }\n}\n\nexport default useIntersectionObserver\n","export const Latinise = {\n  latin_map: {\n    τ: 't',\n    Τ: 'T',\n  },\n}\n\nexport const latinise = (input: string) => {\n  return input.replace(/[^A-Za-z0-9[\\] ]/g, (x) => Latinise.latin_map[x] || x)\n}\n","import React, { useState, useMemo } from 'react'\nimport { Input } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport debounce from 'lodash/debounce'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledInput = styled(Input)`\n  border-radius: 10px;\n  margin-left: auto;\n`\n\nconst InputWrapper = styled.div`\n  position: relative;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: block;\n  }\n`\n\ninterface Props {\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n  placeholder?: string\n}\n\nconst SearchInput: React.FC<Props> = ({ onChange: onChangeCallback, placeholder = 'Search' }) => {\n  const [searchText, setSearchText] = useState('')\n\n  const { t } = useTranslation()\n\n  const debouncedOnChange = useMemo(\n    () => debounce((e: React.ChangeEvent<HTMLInputElement>) => onChangeCallback(e), 500),\n    [onChangeCallback],\n  )\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchText(e.target.value)\n    debouncedOnChange(e)\n  }\n\n  return (\n    <InputWrapper>\n      <StyledInput value={searchText} onChange={onChange} placeholder={t(placeholder)} />\n    </InputWrapper>\n  )\n}\n\nexport default SearchInput\n","import styled from 'styled-components'\n\nconst Loading = styled.div`\n  border: 8px solid #f3f3f3;\n  border-radius: 50%;\n  border-top: 8px solid #ddd;\n  border-bottom: 8px solid #ddd;\n  width: 20px;\n  height: 20px;\n  -webkit-animation: spin 2s linear infinite;\n  animation: spin 2s linear infinite;\n  @-webkit-keyframes spin {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`\n\nexport default Loading\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronDownIcon, ChevronUpIcon, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nexport interface ExpandableSectionButtonProps {\n  onClick?: () => void\n  expanded?: boolean\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n\n  svg {\n    fill: ${({ theme }) => theme.colors.primary};\n  }\n`\n\nconst ExpandableSectionButton: React.FC<ExpandableSectionButtonProps> = ({ onClick, expanded }) => {\n  const { t } = useTranslation()\n\n  return (\n    <Wrapper aria-label={t('Hide or show expandable content')} role=\"button\" onClick={() => onClick()}>\n      <Text color=\"primary\" bold>\n        {expanded ? t('Hide') : t('Details')}\n      </Text>\n      {expanded ? <ChevronUpIcon /> : <ChevronDownIcon />}\n    </Wrapper>\n  )\n}\n\nExpandableSectionButton.defaultProps = {\n  expanded: false,\n}\n\nexport default ExpandableSectionButton\n","import { useEffect, useReducer, useCallback } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { getInterestBreakdown, getPrincipalForInterest, getRoi } from 'utils/compoundApyHelpers'\n\n/**\n * This hook is handling all the calculator state and calculations.\n * UI connected to it is merely representation of the data and buttons to trigger actions\n */\n\n// Mapping from the compounding frequency button index to actual compounding frequency\n// in number of compounds per day\nconst compoundingIndexToFrequency = {\n  0: 1,\n  1: 0.142857142,\n  2: 0.071428571, // once every 7 days\n  3: 0.033333333, // once every 30 days\n}\n\nconst TOKEN_PRECISION = 10\nconst USD_PRECISION = 2\n\n// Used to track/react which currency user is editing (i.e. USD amount or Token amount)\nexport enum EditingCurrency {\n  TOKEN,\n  USD,\n}\n\n// Calculator works in 2 modes\nexport enum CalculatorMode {\n  ROI_BASED_ON_PRINCIPAL, // User edits principal value and sees what ROI they get\n  PRINCIPAL_BASED_ON_ROI, // User edits ROI value and sees what principal they need to invest to reach it\n}\n\nexport interface RoiCalculatorReducerState {\n  controls: {\n    compounding: boolean // Compounding checkbox state\n    compoundingFrequency: number // Compounding frequency in number of compounds per day\n    activeCompoundingIndex: number // index of active compounding button in ButtonMenu\n    stakingDuration: number // index of active staking duration button in ButtonMenu\n    mode: CalculatorMode\n    editingCurrency: EditingCurrency\n  }\n  data: {\n    principalAsToken: string // Used as value for Inputs\n    principalAsUSD: string // Used as value for Inputs\n    roiUSD: number\n    roiTokens: number\n    roiPercentage: number // ROI expressed in percentage relative to principal\n  }\n}\n\nconst initialState: RoiCalculatorReducerState = {\n  controls: {\n    compounding: true,\n    compoundingFrequency: 1, // how many compound in a day , e.g. 1 = once a day, 0.071 - once per 2 weeks\n    activeCompoundingIndex: 0, // active compounding selected in\n    stakingDuration: 3,\n    mode: CalculatorMode.ROI_BASED_ON_PRINCIPAL,\n    editingCurrency: EditingCurrency.USD,\n  },\n  data: {\n    principalAsToken: '0.00',\n    principalAsUSD: '',\n    roiUSD: 0,\n    roiTokens: 0,\n    roiPercentage: 0,\n  },\n}\n\nconst roiCalculatorReducer = (\n  state: RoiCalculatorReducerState,\n  action: { type: string; payload?: any },\n): RoiCalculatorReducerState => {\n  switch (action.type) {\n    case 'setStakingDuration': {\n      const controls = { ...state.controls, stakingDuration: action.payload }\n      return {\n        ...state,\n        controls,\n      }\n    }\n    case 'toggleCompounding': {\n      const toggledCompounding = !state.controls.compounding\n      const controls = { ...state.controls, compounding: toggledCompounding }\n      return {\n        ...state,\n        controls,\n      }\n    }\n    case 'setCompoundingFrequency': {\n      const { index, autoCompoundFrequency } = action.payload\n      if (autoCompoundFrequency) {\n        return {\n          ...state,\n          controls: {\n            ...state.controls,\n            compoundingFrequency: autoCompoundFrequency,\n          },\n        }\n      }\n      const compoundingFrequency = compoundingIndexToFrequency[index]\n      const controls = { ...state.controls, compoundingFrequency, activeCompoundingIndex: index }\n      return {\n        ...state,\n        controls,\n      }\n    }\n    case 'setPrincipal': {\n      const { principalAsUSD, principalAsToken } = action.payload\n      const data = { ...state.data, principalAsUSD, principalAsToken }\n      const controls = { ...state.controls, mode: CalculatorMode.ROI_BASED_ON_PRINCIPAL }\n      return {\n        controls,\n        data,\n      }\n    }\n    case 'setPrincipalForTargetRoi': {\n      const { principalAsUSD, principalAsToken, roiPercentage } = action.payload\n      const data = { ...state.data, principalAsUSD, principalAsToken, roiPercentage }\n      return {\n        ...state,\n        data,\n      }\n    }\n    case 'setCalculatorMode': {\n      const mode = action.payload\n      const controls = { ...state.controls, mode }\n      if (mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI) {\n        const roiUSD = parseFloat(state.data.roiUSD.toFixed(USD_PRECISION))\n        const data = { ...state.data, roiUSD }\n        return { controls, data }\n      }\n      return { ...state, controls }\n    }\n    case 'setRoi': {\n      const data = { ...state.data, ...action.payload }\n      return { ...state, data }\n    }\n    case 'setTargetRoi': {\n      const { roiUSD, roiTokens } = action.payload\n      const data = { ...state.data, roiUSD, roiTokens }\n      const controls = { ...state.controls, mode: CalculatorMode.PRINCIPAL_BASED_ON_ROI }\n      return { controls, data }\n    }\n    case 'toggleEditingCurrency': {\n      const currencyAfterChange =\n        state.controls.editingCurrency === EditingCurrency.USD ? EditingCurrency.TOKEN : EditingCurrency.USD\n      const controls = { ...state.controls, editingCurrency: currencyAfterChange }\n      return { ...state, controls }\n    }\n    default:\n      return state\n  }\n}\n\nconst useRoiCalculatorReducer = (\n  stakingTokenPrice: number,\n  earningTokenPrice: number,\n  apr: number,\n  autoCompoundFrequency: number,\n  performanceFee: number,\n) => {\n  const [state, dispatch] = useReducer(roiCalculatorReducer, initialState)\n  const { principalAsUSD, roiUSD } = state.data\n  const { compounding, compoundingFrequency, stakingDuration, mode } = state.controls\n\n  // If pool is auto-compounding set state's compounding frequency to this pool's auto-compound frequency\n  useEffect(() => {\n    if (autoCompoundFrequency > 0) {\n      dispatch({ type: 'setCompoundingFrequency', payload: { autoCompoundFrequency } })\n    }\n  }, [autoCompoundFrequency])\n\n  // Calculates and sets ROI whenever related values change\n  useEffect(() => {\n    if (mode === CalculatorMode.ROI_BASED_ON_PRINCIPAL) {\n      const principalInUSDAsNumber = parseFloat(principalAsUSD)\n      const compoundFrequency = compounding ? compoundingFrequency : 0\n      const interestBreakdown = getInterestBreakdown({\n        principalInUSD: principalInUSDAsNumber,\n        apr,\n        earningTokenPrice,\n        compoundFrequency,\n        performanceFee,\n      })\n      const hasInterest = !Number.isNaN(interestBreakdown[stakingDuration])\n      const roiTokens = hasInterest ? interestBreakdown[stakingDuration] : 0\n      const roiAsUSD = hasInterest ? roiTokens * earningTokenPrice : 0\n      const roiPercentage = hasInterest\n        ? getRoi({\n            amountEarned: roiAsUSD,\n            amountInvested: principalInUSDAsNumber,\n          })\n        : 0\n      dispatch({ type: 'setRoi', payload: { roiUSD: roiAsUSD, roiTokens, roiPercentage } })\n    }\n  }, [principalAsUSD, apr, stakingDuration, earningTokenPrice, performanceFee, compounding, compoundingFrequency, mode])\n\n  // Calculates and sets principal based on expected ROI value\n  useEffect(() => {\n    if (mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI) {\n      const principalForExpectedRoi = getPrincipalForInterest(\n        roiUSD,\n        apr,\n        compounding ? compoundingFrequency : 0,\n        performanceFee,\n      )\n      const principalUSD = !Number.isNaN(principalForExpectedRoi[stakingDuration])\n        ? principalForExpectedRoi[stakingDuration]\n        : 0\n      const principalToken = new BigNumber(principalUSD).div(stakingTokenPrice)\n      const roiPercentage = getRoi({\n        amountEarned: roiUSD,\n        amountInvested: principalUSD,\n      })\n      dispatch({\n        type: 'setPrincipalForTargetRoi',\n        payload: {\n          principalAsUSD: principalUSD.toFixed(USD_PRECISION),\n          principalAsToken: principalToken.toFixed(TOKEN_PRECISION),\n          roiPercentage,\n        },\n      })\n    }\n  }, [stakingDuration, apr, compounding, compoundingFrequency, mode, roiUSD, stakingTokenPrice, performanceFee])\n\n  // Handler for compounding frequency buttons\n  const setCompoundingFrequency = (index: number) => {\n    dispatch({ type: 'setCompoundingFrequency', payload: { index } })\n  }\n\n  // Handler for principal input when in USD mode\n  const setPrincipalFromUSDValue = (amount: string) => {\n    const principalAsTokenBN = new BigNumber(amount).div(stakingTokenPrice)\n    const principalAsToken = principalAsTokenBN.gt(0) ? principalAsTokenBN.toFixed(TOKEN_PRECISION) : '0.00'\n    dispatch({ type: 'setPrincipal', payload: { principalAsUSD: amount, principalAsToken } })\n  }\n\n  // Handler for principal input when in Token mode\n  const setPrincipalFromTokenValue = useCallback(\n    (amount: string) => {\n      const principalAsUsdBN = new BigNumber(amount).times(stakingTokenPrice)\n      const principalAsUsdString = principalAsUsdBN.gt(0) ? principalAsUsdBN.toFixed(USD_PRECISION) : '0.00'\n      dispatch({\n        type: 'setPrincipal',\n        payload: { principalAsUSD: principalAsUsdString, principalAsToken: amount },\n      })\n    },\n    [stakingTokenPrice],\n  )\n\n  // Handler for staking duration buttons\n  const setStakingDuration = (stakingDurationIndex: number) => {\n    dispatch({ type: 'setStakingDuration', payload: stakingDurationIndex })\n  }\n\n  // Handler for compounding checkbox\n  const toggleCompounding = () => {\n    dispatch({ type: 'toggleCompounding' })\n  }\n\n  // Handler for principal input mode switch\n  const toggleEditingCurrency = () => {\n    dispatch({ type: 'toggleEditingCurrency' })\n  }\n\n  const setCalculatorMode = (modeToSet: CalculatorMode) => {\n    dispatch({ type: 'setCalculatorMode', payload: modeToSet })\n  }\n\n  // Handler for ROI input\n  const setTargetRoi = (amount: string) => {\n    const targetRoiAsTokens = new BigNumber(amount).div(earningTokenPrice)\n    dispatch({\n      type: 'setTargetRoi',\n      payload: { roiUSD: amount, roiTokens: targetRoiAsTokens.isNaN() ? 0 : targetRoiAsTokens.toNumber() },\n    })\n  }\n\n  return {\n    state,\n    setPrincipalFromUSDValue,\n    setPrincipalFromTokenValue,\n    setStakingDuration,\n    toggleCompounding,\n    toggleEditingCurrency,\n    setCompoundingFrequency,\n    setCalculatorMode,\n    setTargetRoi,\n  }\n}\n\nexport default useRoiCalculatorReducer\n","// Constructing the two forward-slash-separated parts of the 'Add Liquidity' URL\n// Each part of the url represents a different side of the LP pair.\nimport tokens from 'config/constants/tokens'\n\nconst getLiquidityUrlPathParts = ({\n  quoteTokenAddress,\n  tokenAddress,\n}: {\n  quoteTokenAddress: string\n  tokenAddress: string\n}): string => {\n  const wBnbAddress = tokens.wbnb.address\n  const firstPart = !quoteTokenAddress || quoteTokenAddress === wBnbAddress ? 'BNB' : quoteTokenAddress\n  const secondPart = !tokenAddress || tokenAddress === wBnbAddress ? 'BNB' : tokenAddress\n  return `${firstPart}/${secondPart}`\n}\n\nexport default getLiquidityUrlPathParts\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { Text, Flex, LinkExternal, Skeleton } from '@pancakeswap/uikit'\n\nexport interface ExpandableSectionProps {\n  bscScanAddress?: string\n  infoAddress?: string\n  removed?: boolean\n  totalValueFormatted?: string\n  lpLabel?: string\n  addLiquidityUrl?: string\n}\n\nconst Wrapper = styled.div`\n  margin-top: 24px;\n`\n\nconst StyledLinkExternal = styled(LinkExternal)`\n  font-weight: 400;\n`\n\nconst DetailsSection: React.FC<ExpandableSectionProps> = ({\n  bscScanAddress,\n  infoAddress,\n  removed,\n  totalValueFormatted,\n  lpLabel,\n  addLiquidityUrl,\n}) => {\n  const { t } = useTranslation()\n\n  return (\n    <Wrapper>\n      {!removed && (\n        <StyledLinkExternal href={addLiquidityUrl} color=\"text\">{t('Get %symbol%', { symbol: lpLabel })}</StyledLinkExternal>\n      )}\n      <StyledLinkExternal href={bscScanAddress} color=\"text\">{t('View Contract')}</StyledLinkExternal>\n      <StyledLinkExternal href={infoAddress} color=\"text\">{t('See Pair Info')}</StyledLinkExternal>\n    </Wrapper>\n  )\n}\n\nexport default DetailsSection\n","import React from 'react'\nimport {\n  TokenPairImage as UIKitTokenPairImage,\n  TokenPairImageProps as UIKitTokenPairImageProps,\n  TokenImage as UIKitTokenImage,\n  ImageProps,\n} from '@pancakeswap/uikit'\nimport tokens from 'config/constants/tokens'\nimport { Token } from '@pancakeswap/sdk'\n\ninterface TokenPairImageProps extends Omit<UIKitTokenPairImageProps, 'primarySrc' | 'secondarySrc'> {\n  primaryToken: Token\n  secondaryToken: Token\n}\n\nconst getImageUrlFromToken = (token: Token) => {\n  const address = token.symbol === 'BNB' ? tokens.wbnb.address : token.address\n  return `/images/tokens/${address}.svg`\n}\n\nexport const TokenPairImage: React.FC<TokenPairImageProps> = ({ primaryToken, secondaryToken, ...props }) => {\n  return (\n    <UIKitTokenPairImage\n      primarySrc={getImageUrlFromToken(primaryToken)}\n      secondarySrc={getImageUrlFromToken(secondaryToken)}\n      {...props}\n    />\n  )\n}\n\ninterface TokenImageProps extends ImageProps {\n  token: Token\n}\n\nexport const TokenImage: React.FC<TokenImageProps> = ({ token, ...props }) => {\n  return <UIKitTokenImage src={getImageUrlFromToken(token)} {...props} />\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useLocation } from 'react-router-dom'\nimport { Tag, Flex, Heading, Skeleton } from '@pancakeswap/uikit'\nimport { Token } from '@pancakeswap/sdk'\nimport { CommunityTag, CoreTag } from 'components/Tags'\nimport { TokenPairImage, TokenImage } from 'components/TokenImage'\n\nexport interface ExpandableSectionProps {\n  lpLabel?: string\n  multiplier?: string\n  isCommunityFarm?: boolean\n  token: Token\n  quoteToken: Token\n}\n\nconst Wrapper = styled(Flex)`\n  svg {\n    margin-right: 4px;\n  }\n`\n\nconst MultiplierTag = styled(Tag)`\n  margin-left: 4px;\n`\n\nconst StyledImage = styled.img`\n  width: 60px;\n`\n\nconst CardHeading: React.FC<ExpandableSectionProps> = ({ lpLabel, multiplier, isCommunityFarm, token, quoteToken }) => {  \n  const { pathname } = useLocation()\n\n  const getImageUrlFromToken = (address: string) => {\n    return `/images/tokens/${address}.svg`\n  }\n\n  return (\n    <Wrapper justifyContent=\"space-between\" alignItems=\"center\" mb=\"12px\">\n      { pathname ===\"/farms\" ?\n        <TokenPairImage variant=\"inverted\" primaryToken={token} secondaryToken={quoteToken} width={64} height={64} />\n        :\n        <StyledImage src={getImageUrlFromToken(token.address)} alt=\"token\" />\n      }\n      <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n        <Heading mb=\"4px\">{lpLabel.split(' ')[0]}</Heading>\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default CardHeading\n","import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport { Text, TextProps } from '@pancakeswap/uikit'\n\ninterface BalanceProps extends TextProps {\n  value: number\n  decimals?: number\n  unit?: string\n  isDisabled?: boolean\n  prefix?: string\n  onClick?: (event: React.MouseEvent<HTMLElement>) => void\n}\n\nconst Balance: React.FC<BalanceProps> = ({\n  value,\n  color = 'text',\n  decimals = 3,\n  isDisabled = false,\n  unit,\n  prefix,\n  onClick,\n  ...props\n}) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n\n  return (\n    <Text color={isDisabled ? 'textDisabled' : color} onClick={onClick} {...props}>\n      <CountUp\n        start={previousValue.current}\n        end={value}\n        prefix={prefix}\n        suffix={unit}\n        decimals={decimals}\n        duration={1}\n        separator=\",\"\n      />\n    </Text>\n  )\n}\n\nexport default Balance\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Flex, Box, Text, ExpandableLabel, LinkExternal, Grid, HelpIcon, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { getApy } from 'utils/compoundApyHelpers'\n\nconst Footer = styled(Flex)`\n  border-top: 1px solid ${({ theme }) => theme.colors.background};\n  width: 100%;\n  background: ${({ theme }) => theme.colors.backgroundAlt};\n`\n\nconst BulletList = styled.ul`\n  list-style-type: none;\n  margin-top: 16px;\n  padding: 0;\n  li {\n    margin: 0;\n    padding: 0;\n  }\n  li::before {\n    content: '•';\n    margin-right: 4px;\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n  li::marker {\n    font-size: 12px;\n  }\n`\n\ninterface RoiCalculatorFooterProps {\n  isFarm: boolean\n  apr: number\n  displayApr: string\n  autoCompoundFrequency: number\n  multiplier: string\n  linkLabel: string\n  linkHref: string\n  performanceFee: number\n}\n\nconst RoiCalculatorFooter: React.FC<RoiCalculatorFooterProps> = ({\n  isFarm,\n  apr,\n  displayApr,\n  autoCompoundFrequency,\n  multiplier,\n  linkLabel,\n  linkHref,\n  performanceFee,\n}) => {\n  const [isExpanded, setIsExpanded] = useState(false)\n  const { t } = useTranslation()\n  const {\n    targetRef: multiplierRef,\n    tooltip: multiplierTooltip,\n    tooltipVisible: multiplierTooltipVisible,\n  } = useTooltip(\n    <>\n      <Text>\n        {t(\n          'The Multiplier represents the proportion of HIGHLORD rewards each farm receives, as a proportion of the HIGHLORD produced each block.',\n        )}\n      </Text>\n      <Text my=\"24px\">\n        {t('For example, if a 1x farm received 1 HIGHLORD per block, a 40x farm would receive 40 HIGHLORD per block.')}\n      </Text>\n      <Text>{t('This amount is already included in all APR calculations for the farm.')}</Text>\n    </>,\n    { placement: 'top-end', tooltipOffset: [20, 10] },\n  )\n\n  const gridRowCount = isFarm ? 4 : 2\n  const apy = (getApy(apr, autoCompoundFrequency > 0 ? autoCompoundFrequency : 1, 365, performanceFee) * 100).toFixed(2)\n\n  return (\n    <Footer p=\"16px\" flexDirection=\"column\">\n      <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded((prev) => !prev)}>\n        {isExpanded ? t('Hide') : t('Details')}\n      </ExpandableLabel>\n      {isExpanded && (\n        <Box px=\"8px\">\n          <Grid gridTemplateColumns=\"2.5fr 1fr\" gridRowGap=\"8px\" gridTemplateRows={`repeat(${gridRowCount}, auto)`}>\n            {isFarm && (\n              <>\n                <Text color=\"textSubtle\" small>\n                  {t('APR (incl. LP rewards)')}\n                </Text>\n                <Text small textAlign=\"right\">\n                  {displayApr}%\n                </Text>\n              </>\n            )}\n            <Text color=\"textSubtle\" small>\n              {isFarm ? t('Base APR (HIGHLORD yield only)') : t('APR')}\n            </Text>\n            <Text small textAlign=\"right\">\n              {apr.toFixed(2)}%\n            </Text>\n            <Text color=\"textSubtle\" small>\n              {t('APY (%compoundTimes%x daily compound)', {\n                compoundTimes: autoCompoundFrequency > 0 ? autoCompoundFrequency : 1,\n              })}\n            </Text>\n            <Text small textAlign=\"right\">\n              {apy}%\n            </Text>\n            {isFarm && (\n              <>\n                <Text color=\"textSubtle\" small>\n                  {t('Farm Multiplier')}\n                </Text>\n                <Flex justifyContent=\"flex-end\" alignItems=\"flex-end\">\n                  <Text small textAlign=\"right\" mr=\"4px\">\n                    {multiplier}\n                  </Text>\n                  <span ref={multiplierRef}>\n                    <HelpIcon color=\"textSubtle\" width=\"16px\" height=\"16px\" />\n                  </span>\n                  {multiplierTooltipVisible && multiplierTooltip}\n                </Flex>\n              </>\n            )}\n          </Grid>\n          <BulletList>\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t('Calculated based on current rates.')}\n              </Text>\n            </li>\n            {isFarm && (\n              <li>\n                <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                  {t('LP rewards: 0.17% trading fees, distributed proportionally among LP token holders.')}\n                </Text>\n              </li>\n            )}\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t(\n                  'All figures are estimates provided for your convenience only, and by no means represent guaranteed returns.',\n                )}\n              </Text>\n            </li>\n            {performanceFee > 0 && (\n              <li>\n                <Text mt=\"14px\" fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                  {t('All estimated rates take into account this pool’s %fee%% performance fee', {\n                    fee: performanceFee,\n                  })}\n                </Text>\n              </li>\n            )}\n          </BulletList>\n          <Flex justifyContent=\"center\" mt=\"24px\">\n            <LinkExternal href={linkHref}>{linkLabel}</LinkExternal>\n          </Flex>\n        </Box>\n      )}\n    </Footer>\n  )\n}\n\nexport default RoiCalculatorFooter\n","import React, { useRef, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Box, Flex, Text, Input, CheckmarkIcon, PencilIcon, IconButton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { CalculatorMode, RoiCalculatorReducerState } from './useRoiCalculatorReducer'\n\nconst MILLION = 1000000\nconst TRILLION = 1000000000000\n\nconst RoiCardWrapper = styled(Box)`\n  padding: 1px;\n  width: 100%;\n`\n\nconst RoiCardInner = styled(Box)`\n  height: 120px;\n  padding: 24px;\n  border-radius: ${({ theme }) => theme.radii.default};\n  background: ${({ theme }) => theme.colors.background};\n`\n\nconst RoiInputContainer = styled(Box)`\n  position: relative;\n  & > input {\n    padding-left: 28px;\n    max-width: 70%;\n  }\n  &:before {\n    position: absolute;\n    content: '$';\n    color: ${({ theme }) => theme.colors.textSubtle};\n    left: 16px;\n    top: 8px;\n  }\n`\n\nconst RoiDisplayContainer = styled(Flex)`\n  max-width: 82%;\n  margin-right: 8px;\n`\n\nconst RoiDollarAmount = styled(Text)<{ fadeOut: boolean }>`\n  position: relative;\n  overflow-x: auto;\n  &::-webkit-scrollbar {\n    height: 0px;\n  }\n\n  ${({ fadeOut, theme }) =>\n    fadeOut &&\n    `\n      &:after {\n        background: linear-gradient(\n          to right,\n          ${theme.colors.background}00,\n          ${theme.colors.background}E6\n        );\n        content: '';\n        height: 100%;\n        pointer-events: none;\n        position: absolute;\n        right: 0;\n        top: 0;\n        width: 40px;\n      }\n  `}\n`\n\ninterface RoiCardProps {\n  earningTokenSymbol: string\n  calculatorState: RoiCalculatorReducerState\n  setTargetRoi: (amount: string) => void\n  setCalculatorMode: (mode: CalculatorMode) => void\n}\n\nconst RoiCard: React.FC<RoiCardProps> = ({ earningTokenSymbol, calculatorState, setTargetRoi, setCalculatorMode }) => {\n  const inputRef = useRef<HTMLInputElement | null>(null)\n  const { roiUSD, roiTokens, roiPercentage } = calculatorState.data\n  const { mode } = calculatorState.controls\n\n  const { t } = useTranslation()\n\n  useEffect(() => {\n    if (mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI && inputRef.current) {\n      inputRef.current.focus()\n    }\n  }, [mode])\n\n  const onEnterEditing = () => {\n    setCalculatorMode(CalculatorMode.PRINCIPAL_BASED_ON_ROI)\n  }\n\n  const onExitRoiEditing = () => {\n    setCalculatorMode(CalculatorMode.ROI_BASED_ON_PRINCIPAL)\n  }\n  const handleExpectedRoiChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTargetRoi(event.currentTarget.value)\n  }\n  return (\n    <RoiCardWrapper>\n      <RoiCardInner>\n        <Text fontSize=\"12px\" color=\"secondary\" bold textTransform=\"uppercase\">\n          {t('ROI at current rates')}\n        </Text>\n        <Flex justifyContent=\"space-between\" mt=\"4px\" height=\"36px\">\n          {mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI ? (\n            <>\n              <RoiInputContainer>\n                <Input\n                  ref={inputRef}\n                  type=\"number\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  value={roiUSD}\n                  placeholder=\"0.0\"\n                  onChange={handleExpectedRoiChange}\n                />\n              </RoiInputContainer>\n              <IconButton scale=\"sm\" variant=\"text\" onClick={onExitRoiEditing}>\n                <CheckmarkIcon color=\"text\" />\n              </IconButton>\n            </>\n          ) : (\n            <>\n              <RoiDisplayContainer onClick={onEnterEditing}>\n                {/* Dollar sign is separate cause its not supposed to scroll with a number if number is huge */}\n                <Text fontSize=\"24px\" bold>\n                  $\n                </Text>\n                <RoiDollarAmount fontSize=\"24px\" bold fadeOut={roiUSD > TRILLION}>\n                  {roiUSD.toLocaleString('en', {\n                    minimumFractionDigits: roiUSD > MILLION ? 0 : 2,\n                    maximumFractionDigits: roiUSD > MILLION ? 0 : 2,\n                  })}\n                </RoiDollarAmount>\n              </RoiDisplayContainer>\n              <IconButton scale=\"sm\" variant=\"text\" onClick={onEnterEditing}>\n                <PencilIcon color=\"text\" />\n              </IconButton>\n            </>\n          )}\n        </Flex>\n        <Text fontSize=\"12px\" color=\"textSubtle\">\n          ~ {roiTokens} {earningTokenSymbol} (\n          {roiPercentage.toLocaleString('en', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}\n          %)\n        </Text>\n      </RoiCardInner>\n    </RoiCardWrapper>\n  )\n}\n\nexport default RoiCard\n","import React, { useState, useEffect } from 'react'\nimport { Flex, ArrowDownIcon, ArrowUpIcon } from '@pancakeswap/uikit'\nimport styled, { keyframes } from 'styled-components'\nimport { CalculatorMode, RoiCalculatorReducerState } from './useRoiCalculatorReducer'\n\nconst rotate = keyframes`\n  0% {\n    transform: scale(1);\n    stroke-width: 0;\n  }\n  50% {\n    transform: scale(1.3);\n    stroke-width: 2;\n  }\n  100% {\n    transform: scale(1);\n    stroke-width: 0;\n  }\n`\n\nconst ArrowContainer = styled(Flex)`\n  & > svg {\n    animation: 0.2s ${rotate} linear;\n    stroke: ${({ theme }) => `${theme.colors.primary}3D`};\n    stroke-width: 0;\n  }\n`\n\ninterface AnimatedArrowProps {\n  calculatorState: RoiCalculatorReducerState\n}\n\nconst AnimatedArrow: React.FC<AnimatedArrowProps> = ({ calculatorState }) => {\n  const [key, setKey] = useState('roiArrow-0')\n  const { mode } = calculatorState.controls\n\n  // Trigger animation on state change\n  useEffect(() => {\n    setKey((prevKey) => {\n      const prevId = parseInt(prevKey.split('-')[1], 10)\n      return `roiArrow-${prevId + 1}`\n    })\n  }, [calculatorState])\n\n  return (\n    <ArrowContainer justifyContent=\"center\" my=\"24px\" key={key}>\n      {mode === CalculatorMode.ROI_BASED_ON_PRINCIPAL ? (\n        <ArrowDownIcon width=\"24px\" height=\"24px\" color=\"textSubtle\" />\n      ) : (\n        <ArrowUpIcon width=\"24px\" height=\"24px\" color=\"textSubtle\" />\n      )}\n    </ArrowContainer>\n  )\n}\n\nexport default AnimatedArrow\n","import React, { useRef, useEffect } from 'react'\nimport styled from 'styled-components'\nimport {\n  Modal,\n  Text,\n  Button,\n  Flex,\n  ButtonMenu,\n  Checkbox,\n  BalanceInput,\n  HelpIcon,\n  ButtonMenuItem,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport RoiCalculatorFooter from './RoiCalculatorFooter'\nimport RoiCard from './RoiCard'\nimport useRoiCalculatorReducer, { CalculatorMode, EditingCurrency } from './useRoiCalculatorReducer'\nimport AnimatedArrow from './AnimatedArrow'\n\ninterface RoiCalculatorModalProps {\n  onDismiss?: () => void\n  onBack?: () => void\n  earningTokenPrice: number\n  apr: number\n  displayApr?: string\n  linkLabel: string\n  linkHref: string\n  stakingTokenBalance: BigNumber\n  stakingTokenSymbol: string\n  stakingTokenPrice: number\n  earningTokenSymbol?: string\n  multiplier?: string\n  autoCompoundFrequency?: number\n  performanceFee?: number\n  isFarm?: boolean\n  initialValue?: string\n}\n\nconst StyledModal = styled(Modal)`\n  max-width: 520px;\n  & > :nth-child(2) {\n    padding: 0;\n  }\n`\n\nconst ScrollableContainer = styled.div`\n  padding: 24px;\n  max-height: 500px;\n  overflow-y: auto;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    max-height: none;\n  }\n`\n\nconst FullWidthButtonMenu = styled(ButtonMenu)<{ disabled?: boolean }>`\n  width: 100%;\n\n  & > button {\n    width: 100%;\n  }\n\n  opacity: ${({ disabled }) => (disabled ? 0.5 : 1)};\n`\n\nconst RoiCalculatorModal: React.FC<RoiCalculatorModalProps> = ({\n  onDismiss,\n  onBack,\n  earningTokenPrice,\n  apr,\n  displayApr,\n  linkLabel,\n  linkHref,\n  stakingTokenBalance,\n  stakingTokenSymbol,\n  stakingTokenPrice,\n  multiplier,\n  initialValue,\n  earningTokenSymbol = 'HIGHLORD',\n  autoCompoundFrequency = 0,\n  performanceFee = 0,\n  isFarm = false,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useActiveWeb3React()\n  const balanceInputRef = useRef<HTMLInputElement | null>(null)\n\n  const {\n    state,\n    setPrincipalFromUSDValue,\n    setPrincipalFromTokenValue,\n    setStakingDuration,\n    toggleCompounding,\n    toggleEditingCurrency,\n    setCompoundingFrequency,\n    setCalculatorMode,\n    setTargetRoi,\n  } = useRoiCalculatorReducer(stakingTokenPrice, earningTokenPrice, apr, autoCompoundFrequency, performanceFee)\n\n  const { compounding, activeCompoundingIndex, stakingDuration, editingCurrency } = state.controls\n  const { principalAsUSD, principalAsToken } = state.data\n\n  // Auto-focus input on opening modal\n  useEffect(() => {\n    if (balanceInputRef.current) {\n      balanceInputRef.current.focus()\n    }\n  }, [])\n\n  // If user comes to calculator from staking modal - initialize with whatever they put in there\n  useEffect(() => {\n    if (initialValue) {\n      setPrincipalFromTokenValue(initialValue)\n    }\n  }, [initialValue, setPrincipalFromTokenValue])\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    isFarm\n      ? t('“My Balance” here includes both LP Tokens in your wallet, and LP Tokens already staked in this farm.')\n      : t(\n          '“My Balance” here includes both %assetSymbol% in your wallet, and %assetSymbol% already staked in this pool.',\n          { assetSymbol: stakingTokenSymbol },\n        ),\n    { placement: 'top-end', tooltipOffset: [20, 10] },\n  )\n\n  const onBalanceFocus = () => {\n    setCalculatorMode(CalculatorMode.ROI_BASED_ON_PRINCIPAL)\n  }\n\n  const editingUnit = editingCurrency === EditingCurrency.TOKEN ? stakingTokenSymbol : 'USD'\n  const editingValue = editingCurrency === EditingCurrency.TOKEN ? principalAsToken : principalAsUSD\n  const conversionUnit = editingCurrency === EditingCurrency.TOKEN ? 'USD' : stakingTokenSymbol\n  const conversionValue = editingCurrency === EditingCurrency.TOKEN ? principalAsUSD : principalAsToken\n  const onUserInput = editingCurrency === EditingCurrency.TOKEN ? setPrincipalFromTokenValue : setPrincipalFromUSDValue\n\n  console.log(\"pooh, stakingDuration = \", stakingDuration)\n\n  return (\n    <StyledModal\n      title={t('ROI Calculator')}\n      onDismiss={onBack || onDismiss}\n      onBack={onBack ?? null}\n    >\n      <ScrollableContainer>\n        <Flex flexDirection=\"column\" mb=\"8px\">\n          <Text color=\"text\" bold fontSize=\"12px\" textTransform=\"uppercase\">\n            {t('%asset% staked', { asset: stakingTokenSymbol })}\n          </Text>\n          <BalanceInput\n            currencyValue={`${conversionValue} ${conversionUnit}`}\n            innerRef={balanceInputRef}\n            placeholder=\"0.00\"\n            value={editingValue}\n            unit={editingUnit}\n            onUserInput={onUserInput}\n            switchEditingUnits={toggleEditingCurrency}\n            onFocus={onBalanceFocus}\n          />\n          <Flex justifyContent=\"space-between\" mt=\"8px\">\n            <Button\n              scale=\"xs\"\n              p=\"4px 16px\"\n              width=\"68px\"\n              variant=\"tertiary\"\n              onClick={() => setPrincipalFromUSDValue('100')}\n            >\n              $100\n            </Button>\n            <Button\n              scale=\"xs\"\n              p=\"4px 16px\"\n              width=\"100px\"\n              variant=\"tertiary\"\n              onClick={() => setPrincipalFromUSDValue('1000')}\n            >\n              $1000\n            </Button>\n            <Button\n              disabled={stakingTokenBalance.lte(0) || !account}\n              scale=\"xs\"\n              p=\"4px 16px\"\n              width=\"150px\"\n              variant=\"tertiary\"\n              onClick={() =>\n                setPrincipalFromUSDValue(getBalanceNumber(stakingTokenBalance.times(stakingTokenPrice)).toString())\n              }\n            >\n              {t('My Balance').toLocaleUpperCase()}\n            </Button>\n            <span ref={targetRef}>\n              <HelpIcon width=\"16px\" height=\"16px\" color=\"primary\" />\n            </span>\n            {tooltipVisible && tooltip}\n          </Flex>\n          <Text mt=\"24px\" color=\"text\" bold fontSize=\"14px\" textTransform=\"uppercase\">\n            {t('Staked for')}\n          </Text>\n          <FullWidthButtonMenu activeIndex={stakingDuration} onItemClick={setStakingDuration} scale=\"sm\">\n            <ButtonMenuItem variant=\"tertiary\">{t('1D')}</ButtonMenuItem>\n            <ButtonMenuItem variant=\"tertiary\">{t('7D')}</ButtonMenuItem>\n            <ButtonMenuItem variant=\"tertiary\">{t('30D')}</ButtonMenuItem>\n            <ButtonMenuItem variant=\"tertiary\">{t('1Y')}</ButtonMenuItem>\n            <ButtonMenuItem variant=\"tertiary\">{t('5Y')}</ButtonMenuItem>\n          </FullWidthButtonMenu>\n          {autoCompoundFrequency === 0 && (\n            <>\n              <Text mt=\"24px\" color=\"text\" bold fontSize=\"14px\" textTransform=\"uppercase\">\n                {t('Compounding every')}\n              </Text>\n              <Flex alignItems=\"center\">\n                <Flex flex=\"1\">\n                  <Checkbox scale=\"sm\" checked={compounding} onChange={toggleCompounding} />\n                </Flex>\n                <Flex flex=\"6\">\n                  <FullWidthButtonMenu\n                    disabled={!compounding}\n                    activeIndex={activeCompoundingIndex}\n                    onItemClick={setCompoundingFrequency}\n                    scale=\"sm\"\n                  >\n                    <ButtonMenuItem>{t('1D')}</ButtonMenuItem>\n                    <ButtonMenuItem>{t('7D')}</ButtonMenuItem>\n                    <ButtonMenuItem>{t('14D')}</ButtonMenuItem>\n                    <ButtonMenuItem>{t('30D')}</ButtonMenuItem>\n                  </FullWidthButtonMenu>\n                </Flex>\n              </Flex>\n            </>\n          )}\n        </Flex>\n        <AnimatedArrow calculatorState={state} />\n        <Flex>\n          <RoiCard\n            earningTokenSymbol={earningTokenSymbol}\n            calculatorState={state}\n            setTargetRoi={setTargetRoi}\n            setCalculatorMode={setCalculatorMode}\n          />\n        </Flex>\n      </ScrollableContainer>\n      <RoiCalculatorFooter\n        isFarm={isFarm}\n        apr={apr}\n        displayApr={displayApr}\n        autoCompoundFrequency={autoCompoundFrequency}\n        multiplier={multiplier}\n        linkLabel={linkLabel}\n        linkHref={linkHref}\n        performanceFee={performanceFee}\n      />\n    </StyledModal>\n  )\n}\n\nexport default RoiCalculatorModal\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Flex, Text, Button, Modal, LinkExternal, CalculateIcon, IconButton } from '@pancakeswap/uikit'\nimport { ModalActions, ModalInput } from 'components/Modal'\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance, formatNumber } from 'utils/formatBalance'\nimport useToast from 'hooks/useToast'\nimport { getInterestBreakdown } from 'utils/compoundApyHelpers'\n\nconst AnnualRoiContainer = styled(Flex)`\n  cursor: pointer;\n`\n\nconst AnnualRoiDisplay = styled(Text)`\n  width: 72px;\n  max-width: 72px;\n  overflow: hidden;\n  text-align: right;\n  text-overflow: ellipsis;\n`\n\ninterface DepositModalProps {\n  max: BigNumber\n  stakedBalance: BigNumber\n  multiplier?: string\n  lpPrice: BigNumber\n  lpLabel?: string\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n  apr?: number\n  displayApr?: string\n  addLiquidityUrl?: string\n  cakePrice?: BigNumber\n  decimals?: number\n  isTokenOnly?: boolean\n}\n\nconst DepositModal: React.FC<DepositModalProps> = ({\n  max,\n  stakedBalance,\n  onConfirm,\n  onDismiss,\n  tokenName = '',\n  multiplier,\n  displayApr,\n  lpPrice,\n  lpLabel,\n  apr,\n  addLiquidityUrl,\n  cakePrice,\n  decimals,\n  isTokenOnly,\n}) => {\n  const [val, setVal] = useState('')\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [showRoiCalculator, setShowRoiCalculator] = useState(false)\n  const { t } = useTranslation()\n  const fullBalance = useMemo(() => {\n    if (isTokenOnly) {\n      return getFullDisplayBalance(max, decimals)\n    }\n    return getFullDisplayBalance(max)\n  }, [max, decimals, isTokenOnly])\n\n  const lpTokensToStake = new BigNumber(val)\n  const fullBalanceNumber = new BigNumber(fullBalance)\n\n  const usdToStake = lpTokensToStake.times(lpPrice)\n\n  const interestBreakdown = getInterestBreakdown({\n    principalInUSD: !lpTokensToStake.isNaN() ? usdToStake.toNumber() : 0,\n    apr,\n    earningTokenPrice: cakePrice.toNumber(),\n  })\n\n  const annualRoi = cakePrice.times(interestBreakdown[3])\n  const formattedAnnualRoi = formatNumber(\n    annualRoi.toNumber(),\n    annualRoi.gt(10000) ? 0 : 2,\n    annualRoi.gt(10000) ? 0 : 2,\n  )\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      if (e.currentTarget.validity.valid) {\n        setVal(e.currentTarget.value.replace(/,/g, '.'))\n      }\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  if (showRoiCalculator) {\n    return (\n      <RoiCalculatorModal\n        linkLabel={t('Get %symbol%', { symbol: lpLabel })}\n        stakingTokenBalance={stakedBalance.plus(max)}\n        stakingTokenSymbol={tokenName}\n        stakingTokenPrice={lpPrice.toNumber()}\n        earningTokenPrice={cakePrice.toNumber()}\n        apr={apr}\n        multiplier={multiplier}\n        displayApr={displayApr}\n        linkHref={addLiquidityUrl}\n        isFarm\n        initialValue={val}\n        onBack={() => setShowRoiCalculator(false)}\n      />\n    )\n  }\n\n  return (\n    <Modal title={!isTokenOnly ? t('Stake LP tokens') : t(`Stake ${tokenName} tokens`)} onDismiss={onDismiss}>\n      <ModalInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n        addLiquidityUrl={addLiquidityUrl}\n        inputTitle={t('Stake')}\n      />\n      <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\n        <Text mr=\"8px\" color=\"textSubtle\">\n          {t('Annual ROI at current rates')}:\n        </Text>\n        <AnnualRoiContainer alignItems=\"center\" onClick={() => setShowRoiCalculator(true)}>\n          <AnnualRoiDisplay>${formattedAnnualRoi}</AnnualRoiDisplay>\n          <IconButton variant=\"text\" scale=\"sm\">\n            <CalculateIcon color=\"textSubtle\" width=\"18px\" />\n          </IconButton>\n        </AnnualRoiContainer>\n      </Flex>\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\" disabled={pendingTx}>\n          {t('Cancel')}\n        </Button>\n        <Button\n          width=\"100%\"\n          disabled={\n            pendingTx || !lpTokensToStake.isFinite() || lpTokensToStake.eq(0) || lpTokensToStake.gt(fullBalanceNumber)\n          }\n          onClick={async () => {\n            setPendingTx(true)\n            try {\n              await onConfirm(val)\n              toastSuccess(t('Staked!'), t('Your funds have been staked in the farm'))\n              onDismiss()\n            } catch (e) {\n              toastError(\n                t('Error'),\n                t('Please try again. Confirm the transaction and make sure you are paying enough gas!'),\n              )\n              console.error(e)\n            } finally {\n              setPendingTx(false)\n            }\n          }}\n        >\n          {pendingTx ? t('Confirming') : t('Confirm')}\n        </Button>\n      </ModalActions>\n      <LinkExternal href={addLiquidityUrl} style={{ alignSelf: 'center' }}>\n        {t('Get %symbol%', { symbol: tokenName })}\n      </LinkExternal>\n    </Modal>\n  )\n}\n\nexport default DepositModal\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from '@pancakeswap/uikit'\nimport { ModalActions, ModalInput } from 'components/Modal'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport useToast from 'hooks/useToast'\n\ninterface WithdrawModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n  decimals?: number\n  isTokenOnly?: boolean\n}\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '', decimals, isTokenOnly }) => {\n  const [val, setVal] = useState('')\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const { t } = useTranslation()\n  const fullBalance = useMemo(() => {\n    if (isTokenOnly) {\n      return getFullDisplayBalance(max, decimals)\n    }\n    return getFullDisplayBalance(max)\n  }, [max, decimals, isTokenOnly])\n\n  const valNumber = new BigNumber(val)\n  const fullBalanceNumber = new BigNumber(fullBalance)\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      if (e.currentTarget.validity.valid) {\n        setVal(e.currentTarget.value.replace(/,/g, '.'))\n      }\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={!isTokenOnly ? t('Unstake LP tokens') : t(`Unstake ${tokenName} tokens`)} onDismiss={onDismiss}>\n      <ModalInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n        inputTitle={t('Unstake')}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\" disabled={pendingTx}>\n          {t('Cancel')}\n        </Button>\n        <Button\n          disabled={pendingTx || !valNumber.isFinite() || valNumber.eq(0) || valNumber.gt(fullBalanceNumber)}\n          onClick={async () => {\n            setPendingTx(true)\n            try {\n              await onConfirm(val)\n              toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\n              onDismiss()\n            } catch (e) {\n              toastError(\n                t('Error'),\n                t('Please try again. Confirm the transaction and make sure you are paying enough gas!'),\n              )\n              console.error(e)\n            } finally {\n              setPendingTx(false)\n            }\n          }}\n          width=\"100%\"\n        >\n          {pendingTx ? t('Confirming') : t('Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default WithdrawModal\n","import { useCallback } from 'react'\nimport { unstakeFarm } from 'utils/calls'\nimport { useMasterchef } from 'hooks/useContract'\n\nconst useUnstakeFarms = (pid: number, decimals: number) => {\n  const masterChefContract = useMasterchef()\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      await unstakeFarm(masterChefContract, pid, amount, decimals)\n    },\n    [masterChefContract, pid, decimals],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstakeFarms\n","import { useCallback } from 'react'\nimport { stakeFarm } from 'utils/calls'\nimport { useMasterchef } from 'hooks/useContract'\n\nconst useStakeFarms = (pid: number, decimals: number) => {\n  const masterChefContract = useMasterchef()\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      const txHash = await stakeFarm(masterChefContract, pid, amount, decimals)\n      console.info(txHash)\n    },\n    [masterChefContract, pid, decimals],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStakeFarms\n","import React, { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, Flex, Heading, IconButton, AddIcon, MinusIcon, useModal } from '@pancakeswap/uikit'\nimport { useLocation } from 'react-router-dom'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { useAppDispatch } from 'state'\nimport { fetchFarmUserDataAsync } from 'state/farms'\nimport { useLpTokenPrice } from 'state/farms/hooks'\nimport { getBalanceAmount, getBalanceNumber } from 'utils/formatBalance'\nimport DepositModal from '../DepositModal'\nimport WithdrawModal from '../WithdrawModal'\nimport useUnstakeFarms from '../../hooks/useUnstakeFarms'\nimport useStakeFarms from '../../hooks/useStakeFarms'\n\ninterface FarmCardActionsProps {\n  stakedBalance?: BigNumber\n  tokenBalance?: BigNumber\n  tokenName?: string\n  pid?: number\n  multiplier?: string\n  apr?: number\n  displayApr?: string\n  addLiquidityUrl?: string\n  cakePrice?: BigNumber\n  lpLabel?: string\n  decimals?: number\n  isTokenOnly?: boolean\n}\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n  svg {\n    width: 20px;\n  }\n`\n\nconst StakeAction: React.FC<FarmCardActionsProps> = ({\n  stakedBalance,\n  tokenBalance,\n  tokenName,\n  pid,\n  multiplier,\n  apr,\n  displayApr,\n  addLiquidityUrl,\n  cakePrice,\n  lpLabel,\n  decimals = 18,\n  isTokenOnly,\n}) => {\n  const { t } = useTranslation()\n  const { onStake } = useStakeFarms(pid, decimals)\n  const { onUnstake } = useUnstakeFarms(pid, decimals)\n  const location = useLocation()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const lpPrice = useLpTokenPrice(tokenName)\n\n  const handleStake = async (amount: string) => {\n    await onStake(amount)\n    dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n  }\n\n  const handleUnstake = async (amount: string) => {\n    await onUnstake(amount)\n    dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n  }\n\n  const displayBalance = useCallback(() => {\n    const stakedBalanceBigNumber = !isTokenOnly ? getBalanceAmount(stakedBalance) : getBalanceAmount(stakedBalance, decimals)\n    if (stakedBalanceBigNumber.gt(0) && stakedBalanceBigNumber.lt(0.0000001)) {\n      return '<0.0000001'\n    }\n    if (stakedBalanceBigNumber.gt(0)) {\n      return stakedBalanceBigNumber.toFixed(8, BigNumber.ROUND_DOWN)\n    }\n    return stakedBalanceBigNumber.toFixed(3, BigNumber.ROUND_DOWN)\n  }, [stakedBalance, decimals, isTokenOnly])\n\n  const [onPresentDeposit] = useModal(\n    <DepositModal\n      max={tokenBalance}\n      stakedBalance={stakedBalance}\n      onConfirm={handleStake}\n      tokenName={tokenName}\n      multiplier={multiplier}\n      lpPrice={lpPrice}\n      lpLabel={lpLabel}\n      apr={apr}\n      displayApr={displayApr}\n      addLiquidityUrl={addLiquidityUrl}\n      cakePrice={cakePrice}\n      decimals={decimals}\n      isTokenOnly={isTokenOnly}\n    />,\n  )\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal max={stakedBalance} onConfirm={handleUnstake} tokenName={tokenName} decimals={decimals} isTokenOnly={isTokenOnly} />,\n  )\n\n  const renderStakingButtons = () => {\n    return stakedBalance.eq(0) ? (\n      <Button\n        onClick={onPresentDeposit}\n        disabled={['history', 'archived'].some((item) => location.pathname.includes(item))}\n        variant=\"secondary\"\n      >\n        {t('Stake LP')}\n      </Button>\n    ) : (\n      <IconButtonWrapper>\n        <IconButton variant=\"tertiary\" onClick={onPresentWithdraw} mr=\"6px\">\n          <MinusIcon color=\"primary\" width=\"14px\" />\n        </IconButton>\n        <IconButton\n          variant=\"tertiary\"\n          onClick={onPresentDeposit}\n          disabled={['history', 'archived'].some((item) => location.pathname.includes(item))}\n        >\n          <AddIcon color=\"primary\" width=\"14px\" />\n        </IconButton>\n      </IconButtonWrapper>\n    )\n  }\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" width=\"100%\" mt=\"10px\">\n      <Flex flexDirection=\"column\" alignItems=\"flex-start\">\n        <Heading color={stakedBalance.eq(0) ? 'textDisabled' : 'text'}>{displayBalance()}</Heading>\n        {stakedBalance.gt(0) && lpPrice.gt(0) && (\n          <Balance\n            fontSize=\"14px\"\n            color=\"primary\"\n            decimals={2}\n            value={getBalanceNumber(lpPrice.times(stakedBalance))}\n            unit=\" USD\"\n            prefix=\"~\"\n          />\n        )}\n      </Flex>\n      {renderStakingButtons()}\n    </Flex>\n  )\n}\n\nexport default StakeAction\n","import { useCallback } from 'react'\nimport { harvestFarm } from 'utils/calls'\nimport { useMasterchef } from 'hooks/useContract'\n\nconst useHarvestFarm = (farmPid: number) => {\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    await harvestFarm(masterChefContract, farmPid)\n  }, [farmPid, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport default useHarvestFarm\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { Button, Flex, Heading } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useAppDispatch } from 'state'\nimport { fetchFarmUserDataAsync } from 'state/farms'\nimport useToast from 'hooks/useToast'\nimport { getBalanceAmount } from 'utils/formatBalance'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { useWeb3React } from '@web3-react/core'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport Balance from 'components/Balance'\nimport useHarvestFarm from '../../hooks/useHarvestFarm'\n\ninterface FarmCardActionsProps {\n  earnings?: BigNumber\n  pid?: number\n}\n\nconst HarvestAction: React.FC<FarmCardActionsProps> = ({ earnings, pid }) => {\n  const { account } = useWeb3React()\n  const { toastSuccess, toastError } = useToast()\n  const { t } = useTranslation()\n  const [pendingTx, setPendingTx] = useState(false)\n  const { onReward } = useHarvestFarm(pid)\n  const cakePrice = usePriceCakeBusd()\n  const dispatch = useAppDispatch()\n  const rawEarningsBalance = account ? getBalanceAmount(earnings) : BIG_ZERO\n  const displayBalance = rawEarningsBalance.toFixed(3, BigNumber.ROUND_DOWN)\n  const earningsBusd = rawEarningsBalance ? rawEarningsBalance.multipliedBy(cakePrice).toNumber() : 0\n\n  return (\n    <Flex mb=\"8px\" justifyContent=\"space-between\" alignItems=\"center\" width=\"100%\">\n      <Flex flexDirection=\"column\" alignItems=\"flex-start\">\n        <Heading color={rawEarningsBalance.eq(0) ? 'textDisabled' : 'text'}>{displayBalance}</Heading>\n        {earningsBusd > 0 && (\n          <Balance fontSize=\"14px\" color=\"primary\" decimals={2} value={earningsBusd} unit=\" USD\" prefix=\"~\" />\n        )}\n      </Flex>\n      <Button\n        disabled={rawEarningsBalance.eq(0) || pendingTx}\n        onClick={async () => {\n          setPendingTx(true)\n          try {\n            await onReward()\n            toastSuccess(\n              `${t('Harvested')}!`,\n              t('Your %symbol% earnings have been sent to your wallet!', { symbol: 'HIGHLORD' }),\n            )\n          } catch (e) {\n            toastError(\n              t('Error'),\n              t('Please try again. Confirm the transaction and make sure you are paying enough gas!'),\n            )\n            console.error(e)\n          } finally {\n            setPendingTx(false)\n          }\n          dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n        }}\n        variant=\"secondary\"\n      >\n        {pendingTx ? t('Harvesting') : t('Harvest')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default HarvestAction\n","import { useCallback } from 'react'\nimport { ethers, Contract } from 'ethers'\nimport { useMasterchef } from 'hooks/useContract'\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\n\nconst useApproveFarm = (lpContract: Contract) => {\n  const masterChefContract = useMasterchef()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const handleApprove = useCallback(async () => {\n    const tx = await callWithGasPrice(lpContract, 'approve', [masterChefContract.address, ethers.constants.MaxUint256])\n    const receipt = await tx.wait()\n    return receipt.status\n  }, [lpContract, masterChefContract, callWithGasPrice])\n\n  return { onApprove: handleApprove }\n}\n\nexport default useApproveFarm\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, Flex, Text } from '@pancakeswap/uikit'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useAppDispatch } from 'state'\nimport { fetchFarmUserDataAsync } from 'state/farms'\nimport { DeserializedFarm } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport useToast from 'hooks/useToast'\nimport { useERC20 } from 'hooks/useContract'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport StakeAction from './StakeAction'\nimport HarvestAction from './HarvestAction'\nimport useApproveFarm from '../../hooks/useApproveFarm'\n\nconst Action = styled.div`\n  padding-top: 16px;\n`\n\nconst StyledFlex = styled(Flex)`\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  border-radius: 10px;\n  border: 1px solid ${({ theme }) => theme.colors.text};\n  padding: 15px;\n`\n\nexport interface FarmWithStakedValue extends DeserializedFarm {\n  apr?: number\n}\n\ninterface FarmCardActionsProps {\n  farm: FarmWithStakedValue\n  account?: string\n  addLiquidityUrl?: string\n  cakePrice?: BigNumber\n  lpLabel?: string\n}\n\nconst CardActions: React.FC<FarmCardActionsProps> = ({ farm, account, addLiquidityUrl, cakePrice, lpLabel }) => {\n  const { t } = useTranslation()\n  const { toastError } = useToast()\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { pid, lpAddresses } = farm\n  const { allowance, tokenBalance, stakedBalance, earnings } = farm.userData || {}\n  const lpAddress = getAddress(lpAddresses)\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\n  const dispatch = useAppDispatch()\n\n  const lpContract = useERC20(lpAddress)\n\n  const { onApprove } = useApproveFarm(lpContract)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      await onApprove()\n      dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n    } catch (e) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      console.error(e)\n    } finally {\n      setRequestedApproval(false)\n    }\n  }, [onApprove, dispatch, account, pid, t, toastError])\n\n  const renderApprovalOrStakeButton = () => {\n    return isApproved ? (\n      <StakeAction\n        stakedBalance={stakedBalance}\n        tokenBalance={tokenBalance}\n        tokenName={farm.lpSymbol}\n        decimals={farm.token.decimals}\n        pid={pid}\n        apr={farm.apr}\n        lpLabel={lpLabel}\n        cakePrice={cakePrice}\n        addLiquidityUrl={addLiquidityUrl}\n        isTokenOnly={farm.isTokenOnly}\n      />\n    ) : (\n      <Button mt=\"10px\" width=\"200px\" disabled={requestedApproval} onClick={handleApprove} variant=\"secondary\">\n        {t('Enable Contract')}\n      </Button>\n    )\n  }\n\n  return (\n    <Action>\n      <StyledFlex mb=\"15px\">\n        <Flex mb=\"10px\">\n          <Text bold textTransform=\"uppercase\" color=\"text\" fontSize=\"14px\" pr=\"4px\">\n            HIGHLORD\n          </Text>\n          <Text bold textTransform=\"uppercase\" color=\"text\" fontSize=\"14px\">\n            {t('Earned')}\n          </Text>\n        </Flex>\n        <HarvestAction earnings={earnings} pid={pid} />\n      </StyledFlex>\n      <StyledFlex>\n        <Flex>\n          <Text bold textTransform=\"uppercase\" color=\"text\" fontSize=\"14px\" pr=\"4px\">\n            {farm.lpSymbol}\n          </Text>\n          <Text bold textTransform=\"uppercase\" color=\"text\" fontSize=\"14px\">\n            {t('Staked')}\n          </Text>\n        </Flex>\n        {!account ? <ConnectWalletButton mt=\"10px\" width=\"200px\" variant=\"secondary\" /> : renderApprovalOrStakeButton()}\n      </StyledFlex>\n    </Action>\n  )\n}\n\nexport default CardActions\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Flex, IconButton, useModal, CalculateIcon } from '@pancakeswap/uikit'\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\nimport { useTranslation } from 'contexts/Localization'\nimport { useFarmUser, useLpTokenPrice } from 'state/farms/hooks'\n\nconst ApyLabelContainer = styled(Flex)`\n  cursor: pointer;\n\n  &:hover {\n    opacity: 0.5;\n  }\n  height: 16px;\n  color: ${({ theme }) => theme.colors.textSubtle};\n`\n\nexport interface ApyButtonProps {\n  variant: 'text' | 'text-and-button'\n  pid: number\n  lpSymbol: string\n  lpLabel?: string\n  multiplier: string\n  cakePrice?: BigNumber\n  apr?: number\n  displayApr?: string\n  addLiquidityUrl?: string\n}\n\nconst ApyButton: React.FC<ApyButtonProps> = ({\n  variant,\n  pid,\n  lpLabel,\n  lpSymbol,\n  cakePrice,\n  apr,\n  multiplier,\n  displayApr,\n  addLiquidityUrl,\n}) => {\n  const { t } = useTranslation()\n  const lpPrice = useLpTokenPrice(lpSymbol)\n  const { tokenBalance, stakedBalance } = useFarmUser(pid)\n  const [onPresentApyModal] = useModal(\n    <RoiCalculatorModal\n      linkLabel={t('Get %symbol%', { symbol: lpLabel })}\n      stakingTokenBalance={stakedBalance.plus(tokenBalance)}\n      stakingTokenSymbol={lpSymbol}\n      stakingTokenPrice={lpPrice.toNumber()}\n      earningTokenPrice={cakePrice.toNumber()}\n      apr={apr}\n      multiplier={multiplier}\n      displayApr={displayApr}\n      linkHref={addLiquidityUrl}\n      isFarm\n    />,\n  )\n\n  const handleClickButton = (event): void => {\n    event.stopPropagation()\n    onPresentApyModal()\n  }\n\n  return (\n    <ApyLabelContainer alignItems=\"center\" onClick={handleClickButton}>\n      {displayApr}%\n      {variant === 'text-and-button' && (\n        <IconButton variant=\"text\" scale=\"sm\">\n          <CalculateIcon width=\"18px\" />\n        </IconButton>\n      )}\n    </ApyLabelContainer>\n  )\n}\n\nexport default ApyButton\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { Card, Flex, Text, Skeleton } from '@pancakeswap/uikit'\nimport { DeserializedFarm } from 'state/types'\nimport { getBscScanLink } from 'utils'\nimport { useTranslation } from 'contexts/Localization'\nimport ExpandableSectionButton from 'components/ExpandableSectionButton'\nimport { BASE_ADD_LIQUIDITY_URL } from 'config'\nimport { getAddress } from 'utils/addressHelpers'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport DetailsSection from './DetailsSection'\nimport CardHeading from './CardHeading'\nimport CardActionsContainer from './CardActionsContainer'\nimport ApyButton from './ApyButton'\n\nexport interface FarmWithStakedValue extends DeserializedFarm {\n  apr?: number\n  lpRewardsApr?: number\n  liquidity?: BigNumber\n}\n\nconst StyledCard = styled(Card)`\n  align-self: baseline;\n`\n\nconst FarmCardInnerContainer = styled(Flex)`\n  flex-direction: column;\n  justify-content: space-around;\n  padding: 24px;\n`\n\nconst ExpandingWrapper = styled.div`\n  padding: 24px;\n  border-top: 2px solid ${({ theme }) => theme.colors.cardBorder};\n  overflow: hidden;\n`\n\nconst StyledValue = styled(Flex)`\n  background:  ${({ theme }) => theme.colors.primary};\n  border-radius: 10px;\n  padding: 6px 10px;\n  width: 90%;\n  color: ${({ theme }) => theme.colors.textSubtle};\n`\n\ninterface FarmCardProps {\n  farm: FarmWithStakedValue\n  displayApr: string\n  removed: boolean\n  cakePrice?: BigNumber\n  account?: string\n}\n\nconst FarmCard: React.FC<FarmCardProps> = ({ farm, displayApr, removed, cakePrice, account }) => {\n  const { t } = useTranslation()\n\n  const [showExpandableSection, setShowExpandableSection] = useState(false)\n\n  const totalValueFormatted =\n    farm.liquidity\n      ? `$${farm.liquidity.toNumber().toLocaleString(undefined, { maximumFractionDigits: 0 })}`\n      : ''\n\n  const lpLabel = farm.lpSymbol && farm.lpSymbol.toUpperCase().replace('PANCAKE', '')\n  const earnLabel = farm.dual ? farm.dual.earnLabel : t('HIGHLORD')\n\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\n    quoteTokenAddress: farm.quoteToken.address,\n    tokenAddress: farm.token.address,\n  })\n  const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`\n  const lpAddress = getAddress(farm.lpAddresses)\n  const isPromotedFarm = farm.token.symbol === 'HIGHLORD'\n\n  return (\n    <StyledCard isActive={isPromotedFarm}>\n      <FarmCardInnerContainer>\n        <CardHeading\n          lpLabel={lpLabel}\n          multiplier={farm.multiplier}\n          isCommunityFarm={farm.isCommunity}\n          token={farm.token}\n          quoteToken={farm.quoteToken}\n        />\n        <Flex mb=\"10px\">\n          {!removed && (\n            <Flex justifyContent=\"space-between\" width=\"50%\" flexDirection=\"column\">\n              <Text>{t('APR')}</Text>\n              <Text style={{ display: 'flex', alignItems: 'center' }}>\n                {farm.apr ? (\n                  <StyledValue>\n                    <ApyButton\n                      variant=\"text-and-button\"\n                      pid={farm.pid}\n                      lpSymbol={farm.lpSymbol}\n                      multiplier={farm.multiplier}\n                      lpLabel={lpLabel}\n                      addLiquidityUrl={addLiquidityUrl}\n                      cakePrice={cakePrice}\n                      apr={farm.apr}\n                      displayApr={displayApr}\n                    />\n                  </StyledValue>\n                ) : (\n                  <Skeleton height={24} width={80} />\n                )}\n              </Text>\n            </Flex>\n          )}\n          <Flex justifyContent=\"space-between\" width=\"50%\" flexDirection=\"column\">\n            <Text>{t('Earn')}</Text>\n            <StyledValue>{earnLabel}</StyledValue>\n          </Flex>\n        </Flex>\n        <Flex>\n          <Flex justifyContent=\"space-between\" width=\"50%\" flexDirection=\"column\">\n            <Text>{t('Total Liquidity')}</Text>\n            {totalValueFormatted ? <StyledValue>{totalValueFormatted}</StyledValue> : <Skeleton width={75} height={25} />}\n          </Flex>\n          <Flex justifyContent=\"space-between\" width=\"50%\" flexDirection=\"column\">\n            <Text>{t('Multiplier')}</Text>\n            {farm.multiplier ? <StyledValue>{farm.multiplier}</StyledValue> : <Skeleton width={75} height={25} />}\n          </Flex>\n        </Flex>\n        {showExpandableSection && (\n          <DetailsSection\n            removed={removed}\n            bscScanAddress={getBscScanLink(lpAddress, 'address')}\n            infoAddress={`/info/pool/${lpAddress}`}\n            totalValueFormatted={totalValueFormatted}\n            lpLabel={lpLabel}\n            addLiquidityUrl={addLiquidityUrl}\n          />\n        )}\n        <CardActionsContainer\n          farm={farm}\n          lpLabel={lpLabel}\n          account={account}\n          cakePrice={cakePrice}\n          addLiquidityUrl={addLiquidityUrl}\n        />\n      </FarmCardInnerContainer>\n      <ExpandingWrapper>\n        <ExpandableSectionButton\n          onClick={() => setShowExpandableSection(!showExpandableSection)}\n          expanded={showExpandableSection}\n        />\n      </ExpandingWrapper>\n    </StyledCard>\n  )\n}\n\nexport default FarmCard\n","import { useState, useEffect } from 'react'\n\n/**\n * Use this hook when you want to animate something when it appears on the screen (e.g. when some prop set to true)\n * but when its not on the screen you want it to be fully unmounted and not just hidden or height 0.\n * This is especially useful when you have a table of 100s rows and each row has expandable element that appears on click.\n * If you just set the expanding animation while keeping inactive elements mounted all those 100 elements will load the DOM,\n * and if they all receive updates via props you're looking at 100 DOM updates for hidden elements.\n * This hook \"shows\" element immediately when the isMounted is true\n * but keeps element mounted for delayTime to let unmounting animation happen, after which you unmount element completely.\n * delayTime should be the same as animation time in most cases.\n */\nconst useDelayedUnmount = (isMounted: boolean, delayTime: number) => {\n  const [shouldRender, setShouldRender] = useState(false)\n\n  useEffect(() => {\n    let timeoutId: ReturnType<typeof setTimeout>\n    if (isMounted && !shouldRender) {\n      setShouldRender(true)\n    } else if (!isMounted && shouldRender) {\n      timeoutId = setTimeout(() => setShouldRender(false), delayTime)\n    }\n    return () => clearTimeout(timeoutId)\n  }, [isMounted, delayTime, shouldRender])\n  return shouldRender\n}\n\nexport default useDelayedUnmount\n","import React from 'react'\nimport styled from 'styled-components'\nimport ApyButton from 'views/Farms/components/FarmCard/ApyButton'\nimport BigNumber from 'bignumber.js'\nimport { BASE_ADD_LIQUIDITY_URL } from 'config'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport { Skeleton } from '@pancakeswap/uikit'\n\nexport interface AprProps {\n  value: string\n  multiplier: string\n  pid: number\n  lpLabel: string\n  lpSymbol: string\n  tokenAddress?: string\n  quoteTokenAddress?: string\n  cakePrice: BigNumber\n  originalValue: number\n  hideButton?: boolean\n}\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n\n  button {\n    width: 20px;\n    height: 20px;\n\n    svg {\n      path {\n        fill: ${({ theme }) => theme.colors.textSubtle};\n      }\n    }\n  }\n  margin: auto;\n`\n\nconst AprWrapper = styled.div`\n  min-width: 60px;\n  text-align: left;\n`\n\nconst Apr: React.FC<AprProps> = ({\n  value,\n  pid,\n  lpLabel,\n  lpSymbol,\n  multiplier,\n  tokenAddress,\n  quoteTokenAddress,\n  cakePrice,\n  originalValue,\n  hideButton = false,\n}) => {\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({ quoteTokenAddress, tokenAddress })\n  const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`\n\n  return originalValue !== 0 ? (\n    <Container>\n      {originalValue ? (\n        <ApyButton\n          variant={hideButton ? 'text' : 'text-and-button'}\n          pid={pid}\n          lpSymbol={lpSymbol}\n          lpLabel={lpLabel}\n          multiplier={multiplier}\n          cakePrice={cakePrice}\n          apr={originalValue}\n          displayApr={value}\n          addLiquidityUrl={addLiquidityUrl}\n        />\n      ) : (\n        <AprWrapper>\n          <Skeleton width={60} />\n        </AprWrapper>\n      )}\n    </Container>\n  ) : (\n    <Container>\n      <AprWrapper>{originalValue}%</AprWrapper>\n    </Container>\n  )\n}\n\nexport default Apr\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useFarmUser } from 'state/farms/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text } from '@pancakeswap/uikit'\nimport { Token } from '@pancakeswap/sdk'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { TokenPairImage } from 'components/TokenImage'\n\nexport interface FarmProps {\n  label: string\n  pid: number\n  token: Token\n  quoteToken: Token\n}\n\nconst Container = styled.div`\n  padding-left: 16px;\n  display: flex;\n  align-items: center;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 32px;\n  }\n`\n\nconst TokenWrapper = styled.div`\n  padding-right: 8px;\n  width: 24px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: 40px;\n  }\n`\n\nconst Farm: React.FunctionComponent<FarmProps> = ({ token, quoteToken, label, pid }) => {\n  const { stakedBalance } = useFarmUser(pid)\n  const { t } = useTranslation()\n  const rawStakedBalance = getBalanceNumber(stakedBalance)\n\n  const handleRenderFarming = (): JSX.Element => {\n    if (rawStakedBalance) {\n      return (\n        <Text color=\"secondary\" fontSize=\"12px\" bold textTransform=\"uppercase\">\n          {t('Farming')}\n        </Text>\n      )\n    }\n\n    return null\n  }\n\n  return (\n    <Container>\n      <TokenWrapper>\n        <TokenPairImage variant=\"inverted\" primaryToken={token} secondaryToken={quoteToken} width={40} height={40} />\n      </TokenWrapper>\n      <div>\n        <Text bold>{label}</Text>\n      </div>\n    </Container>\n  )\n}\n\nexport default Farm\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Skeleton } from '@pancakeswap/uikit'\n\nexport interface EarnedProps {\n  earnings: number\n  pid: number\n}\n\ninterface EarnedPropsWithLoading extends EarnedProps {\n  userDataReady: boolean\n}\n\nconst Amount = styled.span<{ earned: number }>`\n  color: ${({ earned, theme }) => theme.colors.textSubtle};\n  display: flex;\n  align-items: center;\n  margin: auto;\n`\n\nconst Earned: React.FunctionComponent<EarnedPropsWithLoading> = ({ earnings, userDataReady }) => {\n  if (userDataReady) {\n    return <Amount earned={earnings}>{earnings.toLocaleString()}</Amount>\n  }\n  return (\n    <Amount earned={0}>\n      <Skeleton width={60} />\n    </Amount>\n  )\n}\n\nexport default Earned\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronDownIcon, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface DetailsProps {\n  actionPanelToggled: boolean\n}\n\nconst Container = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: flex-end;\n  padding-right: 8px;\n  color: ${({ theme }) => theme.colors.primary};\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-right: 0px;\n  }\n  margin: auto;\n`\n\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\n  height: 20px;\n`\n\nconst Details: React.FC<DetailsProps> = ({ actionPanelToggled }) => {\n  const { t } = useTranslation()\n  const { isDesktop } = useMatchBreakpoints()\n\n  return (\n    <Container>\n      {!isDesktop && t('Details')}\n      <ArrowIcon color=\"primary\" toggled={actionPanelToggled} />\n    </Container>\n  )\n}\n\nexport default Details\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, HelpIcon, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst ReferenceElement = styled.div`\n  display: inline-block;\n`\n\nexport interface MultiplierProps {\n  multiplier: string\n}\n\nconst MultiplierWrapper = styled.div`\n  color: ${({ theme }) => theme.colors.textSubtle};\n  width: 36px;\n  text-align: right;\n  margin-right: 14px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    text-align: left;\n    margin-right: 0;\n  }\n`\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  margin: auto;\n`\n\nconst Multiplier: React.FunctionComponent<MultiplierProps> = ({ multiplier }) => {\n  const displayMultiplier = multiplier ? multiplier.toLowerCase() : <Skeleton width={30} />\n  const { t } = useTranslation()\n  const tooltipContent = (\n    <>\n      <Text>\n        {t(\n          'The Multiplier represents the proportion of HIGHLORD rewards each farm receives, as a proportion of the HIGHLORD produced each block.',\n        )}\n      </Text>\n      <Text my=\"24px\">\n        {t('For example, if a 1x farm received 1 HIGHLORD per block, a 40x farm would receive 40 HIGHLORD per block.')}\n      </Text>\n      <Text>{t('This amount is already included in all APR calculations for the farm.')}</Text>\n    </>\n  )\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, {\n    placement: 'top-end',\n    tooltipOffset: [20, 10],\n  })\n\n  return (\n    <Container>\n      <MultiplierWrapper>{displayMultiplier}</MultiplierWrapper>\n      <ReferenceElement ref={targetRef}>\n        <HelpIcon color=\"textSubtle\" />\n      </ReferenceElement>\n      {tooltipVisible && tooltip}\n    </Container>\n  )\n}\n\nexport default Multiplier\n","import React from 'react'\nimport styled from 'styled-components'\nimport { HelpIcon, Text, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport BigNumber from 'bignumber.js'\n\nconst ReferenceElement = styled.div`\n  display: inline-block;\n`\n\nexport interface LiquidityProps {\n  liquidity: BigNumber\n}\n\nconst LiquidityWrapper = styled.div`\n  min-width: 110px;\n  font-weight: 600;\n  text-align: right;\n  margin-right: 14px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    text-align: left;\n    margin-right: 0;\n  }\n`\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  margin: auto;\n`\n\nconst Liquidity: React.FunctionComponent<LiquidityProps> = ({ liquidity }) => {\n  const displayLiquidity =\n    liquidity && liquidity.gt(0) ? (\n      `$${Number(liquidity).toLocaleString(undefined, { maximumFractionDigits: 0 })}`\n    ) : (\n      <Skeleton width={60} />\n    )\n  const { t } = useTranslation()\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Total value of the funds in this farm’s liquidity pool'),\n    { placement: 'top-end', tooltipOffset: [20, 10] },\n  )\n\n  return (\n    <Container>\n      <LiquidityWrapper>\n        <Text color=\"textSubtle\">{displayLiquidity}</Text>\n      </LiquidityWrapper>\n      <ReferenceElement ref={targetRef}>\n        <HelpIcon color=\"textSubtle\" />\n      </ReferenceElement>\n      {tooltipVisible && tooltip}\n    </Container>\n  )\n}\n\nexport default Liquidity\n","import React from 'react'\nimport {\n  Tag,\n  VerifiedIcon,\n  CommunityIcon,\n  RefreshIcon,\n  AutoRenewIcon,\n  TagProps,\n  TimerIcon,\n  BlockIcon,\n  VoteIcon,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst CoreTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"primary\" outline startIcon={<VerifiedIcon width=\"18px\" color=\"primary\" mr=\"4px\" />} {...props}>\n      {t('Core')}\n    </Tag>\n  )\n}\n\nconst CommunityTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"failure\" outline startIcon={<CommunityIcon width=\"18px\" color=\"failure\" mr=\"4px\" />} {...props}>\n      {t('Community')}\n    </Tag>\n  )\n}\n\nconst DualTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"textSubtle\" outline {...props}>\n      {t('Dual')}\n    </Tag>\n  )\n}\n\nconst ManualPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<RefreshIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Manual')}\n    </Tag>\n  )\n}\n\nconst CompoundingPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"success\" outline startIcon={<AutoRenewIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Auto')}\n    </Tag>\n  )\n}\n\nconst VoteNowTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"success\" startIcon={<VoteIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Vote Now')}\n    </Tag>\n  )\n}\n\nconst SoonTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"binance\" startIcon={<TimerIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Soon')}\n    </Tag>\n  )\n}\n\nconst ClosedTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"textDisabled\" startIcon={<BlockIcon width=\"18px\" color=\"textDisabled\" mr=\"4px\" />} {...props}>\n      {t('Closed')}\n    </Tag>\n  )\n}\n\nexport { CoreTag, CommunityTag, DualTag, ManualPoolTag, CompoundingPoolTag, VoteNowTag, SoonTag, ClosedTag }\n","import styled from 'styled-components'\n\nexport const ActionContainer = styled.div`\n  padding: 16px;\n  border: 2px solid ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  flex-grow: 1;\n  flex-basis: 0;\n  margin-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 12px;\n    margin-right: 12px;\n    margin-bottom: 0;\n    max-height: 100px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    margin-left: 48px;\n    margin-right: 0;\n    margin-bottom: 0;\n    max-height: 100px;\n  }\n`\n\nexport const ActionTitles = styled.div`\n  display: flex;\n`\n\nexport const ActionContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n","import React, { useState } from 'react'\nimport { Button, Heading, Skeleton, Text } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\nimport Balance from 'components/Balance'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getBalanceAmount } from 'utils/formatBalance'\nimport { useAppDispatch } from 'state'\nimport { fetchFarmUserDataAsync } from 'state/farms'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport useToast from 'hooks/useToast'\nimport { useTranslation } from 'contexts/Localization'\nimport useHarvestFarm from '../../../hooks/useHarvestFarm'\n\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\n\ninterface HarvestActionProps extends FarmWithStakedValue {\n  userDataReady: boolean\n}\n\nconst HarvestAction: React.FunctionComponent<HarvestActionProps> = ({ pid, userData, userDataReady }) => {\n  const { toastSuccess, toastError } = useToast()\n  const earningsBigNumber = new BigNumber(userData.earnings)\n  const cakePrice = usePriceCakeBusd()\n  let earnings = BIG_ZERO\n  let earningsBusd = 0\n  let displayBalance = userDataReady ? earnings.toLocaleString() : <Skeleton width={60} />\n\n  // If user didn't connect wallet default balance will be 0\n  if (!earningsBigNumber.isZero()) {\n    earnings = getBalanceAmount(earningsBigNumber)\n    earningsBusd = earnings.multipliedBy(cakePrice).toNumber()\n    displayBalance = earnings.toFixed(3, BigNumber.ROUND_DOWN)\n  }\n\n  const [pendingTx, setPendingTx] = useState(false)\n  const { onReward } = useHarvestFarm(pid)\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Text bold textTransform=\"uppercase\" color=\"text\" fontSize=\"12px\" pr=\"4px\">\n          HIGHLORD\n        </Text>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n          {t('Earned')}\n        </Text>\n      </ActionTitles>\n      <ActionContent>\n        <div>\n          <Heading>{displayBalance}</Heading>\n          {earningsBusd > 0 && (\n            <Balance fontSize=\"12px\" color=\"textSubtle\" decimals={2} value={earningsBusd} unit=\" USD\" prefix=\"~\" />\n          )}\n        </div>\n        <Button\n          disabled={earnings.eq(0) || pendingTx || !userDataReady}\n          onClick={async () => {\n            setPendingTx(true)\n            try {\n              await onReward()\n              toastSuccess(\n                `${t('Harvested')}!`,\n                t('Your %symbol% earnings have been sent to your wallet!', { symbol: 'HIGHLORD' }),\n              )\n            } catch (e) {\n              toastError(\n                t('Error'),\n                t('Please try again. Confirm the transaction and make sure you are paying enough gas!'),\n              )\n              console.error(e)\n            } finally {\n              setPendingTx(false)\n            }\n            dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n          }}\n          ml=\"4px\"\n        >\n          {pendingTx ? t('Harvesting') : t('Harvest')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default HarvestAction\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Button, useModal, IconButton, AddIcon, MinusIcon, Skeleton, Text, Heading } from '@pancakeswap/uikit'\nimport { useLocation } from 'react-router-dom'\nimport { BigNumber } from 'bignumber.js'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport Balance from 'components/Balance'\nimport { useWeb3React } from '@web3-react/core'\nimport { useFarmUser, useLpTokenPrice, usePriceCakeBusd } from 'state/farms/hooks'\nimport { fetchFarmUserDataAsync } from 'state/farms'\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\nimport { useTranslation } from 'contexts/Localization'\nimport useToast from 'hooks/useToast'\nimport { useERC20 } from 'hooks/useContract'\nimport { BASE_ADD_LIQUIDITY_URL } from 'config'\nimport { useAppDispatch } from 'state'\nimport { getAddress } from 'utils/addressHelpers'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport { getBalanceAmount, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport useUnstakeFarms from '../../../hooks/useUnstakeFarms'\nimport DepositModal from '../../DepositModal'\nimport WithdrawModal from '../../WithdrawModal'\nimport useStakeFarms from '../../../hooks/useStakeFarms'\nimport useApproveFarm from '../../../hooks/useApproveFarm'\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n`\n\ninterface StackedActionProps extends FarmWithStakedValue {\n  userDataReady: boolean\n  lpLabel?: string\n  displayApr?: string\n}\n\nconst Staked: React.FunctionComponent<StackedActionProps> = ({\n  pid,\n  apr,\n  multiplier,\n  lpSymbol,\n  lpLabel,\n  lpAddresses,\n  quoteToken,\n  token,\n  userDataReady,\n  displayApr,\n  isTokenOnly,\n}) => {\n  const { t } = useTranslation()\n  const { toastError } = useToast()\n  const { account } = useWeb3React()\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { allowance, tokenBalance, stakedBalance } = useFarmUser(pid)\n  const { onStake } = useStakeFarms(pid, token.decimals)\n  const { onUnstake } = useUnstakeFarms(pid, token.decimals)\n  const location = useLocation()\n  const lpPrice = useLpTokenPrice(lpSymbol)\n  const cakePrice = usePriceCakeBusd()\n\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\n\n  const lpAddress = getAddress(lpAddresses)\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\n    quoteTokenAddress: quoteToken.address,\n    tokenAddress: token.address,\n  })\n  const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`\n\n  const handleStake = async (amount: string) => {\n    await onStake(amount)\n    dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n  }\n\n  const handleUnstake = async (amount: string) => {\n    await onUnstake(amount)\n    dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n  }\n\n  const displayBalance = useCallback(() => {\n    const stakedBalanceBigNumber = !isTokenOnly ? getBalanceAmount(stakedBalance) : getBalanceAmount(stakedBalance, token.decimals)\n    if (stakedBalanceBigNumber.gt(0) && stakedBalanceBigNumber.lt(0.0000001)) {\n      return stakedBalanceBigNumber.toFixed(10, BigNumber.ROUND_DOWN)\n    }\n    if (stakedBalanceBigNumber.gt(0) && stakedBalanceBigNumber.lt(0.0001)) {\n      return getFullDisplayBalance(stakedBalance).toLocaleString()\n    }\n    return stakedBalanceBigNumber.toFixed(3, BigNumber.ROUND_DOWN)\n  }, [stakedBalance, token.decimals, isTokenOnly])\n\n  const [onPresentDeposit] = useModal(\n    <DepositModal\n      max={tokenBalance}\n      lpPrice={lpPrice}\n      lpLabel={lpLabel}\n      apr={apr}\n      displayApr={displayApr}\n      stakedBalance={stakedBalance}\n      onConfirm={handleStake}\n      tokenName={lpSymbol}\n      multiplier={multiplier}\n      addLiquidityUrl={addLiquidityUrl}\n      cakePrice={cakePrice}\n      decimals={token.decimals}\n      isTokenOnly={isTokenOnly}\n    />,\n  )\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal max={stakedBalance} onConfirm={handleUnstake} tokenName={lpSymbol} decimals={token.decimals} isTokenOnly={isTokenOnly} />,\n  )\n  const lpContract = useERC20(lpAddress)\n  const dispatch = useAppDispatch()\n  const { onApprove } = useApproveFarm(lpContract)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      await onApprove()\n      dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n    } catch (e) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      console.error(e)\n    } finally {\n      setRequestedApproval(false)\n    }\n  }, [onApprove, dispatch, account, pid, t, toastError])\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n            {t('Start Farming')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <ConnectWalletButton width=\"100%\" />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (isApproved) {\n    if (stakedBalance.gt(0)) {\n      return (\n        <ActionContainer>\n          <ActionTitles>\n            <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"4px\">\n              {lpSymbol}\n            </Text>\n            <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n              {t('Staked')}\n            </Text>\n          </ActionTitles>\n          <ActionContent>\n            <div>\n              <Heading>{displayBalance()}</Heading>\n              {stakedBalance.gt(0) && lpPrice.gt(0) && (\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  decimals={2}\n                  value={getBalanceNumber(lpPrice.times(stakedBalance))}\n                  unit=\" USD\"\n                  prefix=\"~\"\n                />\n              )}\n            </div>\n            <IconButtonWrapper>\n              <IconButton variant=\"secondary\" onClick={onPresentWithdraw} mr=\"6px\">\n                <MinusIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n              <IconButton\n                variant=\"secondary\"\n                onClick={onPresentDeposit}\n                disabled={['history', 'archived'].some((item) => location.pathname.includes(item))}\n              >\n                <AddIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n            </IconButtonWrapper>\n          </ActionContent>\n        </ActionContainer>\n      )\n    }\n\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\" pr=\"4px\">\n            {t('Stake')}\n          </Text>\n          <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\">\n            {lpSymbol}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Button\n            width=\"100%\"\n            onClick={onPresentDeposit}\n            variant=\"secondary\"\n            disabled={['history', 'archived'].some((item) => location.pathname.includes(item))}\n          >\n            {t('Stake LP')}\n          </Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataReady) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n            {t('Start Farming')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} marginBottom={28} marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n          {t('Enable Farm')}\n        </Text>\n      </ActionTitles>\n      <ActionContent>\n        <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"secondary\">\n          {t('Enable')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default Staked\n","import React from 'react'\nimport styled, { keyframes, css } from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { LinkExternal, Text } from '@pancakeswap/uikit'\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport { getAddress } from 'utils/addressHelpers'\nimport { getBscScanLink } from 'utils'\nimport { CommunityTag, CoreTag, DualTag } from 'components/Tags'\n\nimport HarvestAction from './HarvestAction'\nimport StakedAction from './StakedAction'\nimport Apr, { AprProps } from '../Apr'\nimport Multiplier, { MultiplierProps } from '../Multiplier'\nimport Liquidity, { LiquidityProps } from '../Liquidity'\n\nexport interface ActionPanelProps {\n  apr: AprProps\n  multiplier: MultiplierProps\n  liquidity: LiquidityProps\n  details: FarmWithStakedValue\n  userDataReady: boolean\n  expanded: boolean\n}\n\nconst expandAnimation = keyframes`\n  from {\n    max-height: 0px;\n  }\n  to {\n    max-height: 500px;\n  }\n`\n\nconst collapseAnimation = keyframes`\n  from {\n    max-height: 500px;\n  }\n  to {\n    max-height: 0px;\n  }\n`\n\nconst Container = styled.div<{ expanded }>`\n  animation: ${({ expanded }) =>\n    expanded\n      ? css`\n          ${expandAnimation} 300ms linear forwards\n        `\n      : css`\n          ${collapseAnimation} 300ms linear forwards\n        `};\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.background};\n  display: flex;\n  width: 100%;\n  flex-direction: column-reverse;\n  padding: 24px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    flex-direction: row;\n    padding: 16px 32px;\n  }\n`\n\nconst StyledLinkExternal = styled(LinkExternal)`\n  font-weight: 400;\n`\n\nconst StakeContainer = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  align-items: center;\n  display: flex;\n  justify-content: space-between;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n  }\n`\n\nconst TagsContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 25px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-top: 16px;\n  }\n\n  > div {\n    height: 24px;\n    padding: 0 6px;\n    font-size: 14px;\n    margin-right: 4px;\n\n    svg {\n      width: 14px;\n    }\n  }\n`\n\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    align-items: center;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n`\n\nconst InfoContainer = styled.div`\n  min-width: 200px;\n`\n\nconst ValueContainer = styled.div`\n  display: block;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    display: none;\n  }\n`\n\nconst ValueWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin: 4px 0px;\n`\n\nconst ActionPanel: React.FunctionComponent<ActionPanelProps> = ({\n  details,\n  apr,\n  multiplier,\n  liquidity,\n  userDataReady,\n  expanded,\n}) => {\n  const farm = details\n\n  const { t } = useTranslation()\n  const isActive = farm.multiplier !== '0X'\n  const { quoteToken, token, dual } = farm\n  const lpLabel = farm.lpSymbol && farm.lpSymbol.toUpperCase().replace('PANCAKE', '')\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\n    quoteTokenAddress: quoteToken.address,\n    tokenAddress: token.address,\n  })\n  const lpAddress = getAddress(farm.lpAddresses)\n  const bsc = getBscScanLink(lpAddress, 'address')\n  const info = `/info/pool/${lpAddress}`\n\n  return (\n    <Container expanded={expanded}>\n      <InfoContainer>\n        {isActive && (\n          <StakeContainer>\n            <StyledLinkExternal href={`/add/${liquidityUrlPathParts}`}>\n              {t('Get %symbol%', { symbol: lpLabel })}\n            </StyledLinkExternal>\n          </StakeContainer>\n        )}\n        <StyledLinkExternal href={bsc}>{t('View Contract')}</StyledLinkExternal>\n        <StyledLinkExternal href={info}>{t('See Pair Info')}</StyledLinkExternal>\n        <TagsContainer>\n          {farm.isCommunity ? <CommunityTag /> : <CoreTag />}\n          {dual ? <DualTag /> : null}\n        </TagsContainer>\n      </InfoContainer>\n      <ValueContainer>\n        <ValueWrapper>\n          <Text>{t('APR')}</Text>\n          <Apr {...apr} />\n        </ValueWrapper>\n        <ValueWrapper>\n          <Text>{t('Multiplier')}</Text>\n          <Multiplier {...multiplier} />\n        </ValueWrapper>\n        <ValueWrapper>\n          <Text>{t('Liquidity')}</Text>\n          <Liquidity {...liquidity} />\n        </ValueWrapper>\n      </ValueContainer>\n      <ActionContainer>\n        <HarvestAction {...farm} userDataReady={userDataReady} />\n        <StakedAction {...farm} userDataReady={userDataReady} lpLabel={lpLabel} displayApr={apr.value} />\n      </ActionContainer>\n    </Container>\n  )\n}\n\nexport default ActionPanel\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Label = styled.div`\n  font-size: 12px;\n  color: ${({ theme }) => theme.colors.textSubtle};\n  text-align: left;\n`\n\nconst ContentContainer = styled.div`\n  min-height: 24px;\n  display: flex;\n  align-items: center;\n`\n\nconst Layout = styled.div<{background: boolean}>`\n  width: 100%;\n  height: 100%;\n  background: ${({ theme, background }) => background ? theme.colors.primary : \"transparent\"};\n  padding: 20px;\n  border-radius: 10px;\n  text-align-last: center;\n`\n\ninterface CellLayoutProps {\n  label?: string\n  background?: boolean\n}\n\nconst CellLayout: React.FC<CellLayoutProps> = ({ label = '', background, children }) => {\n  return (\n    <Layout background={background}>\n      <ContentContainer>{children}</ContentContainer>\n      {label && <Label>{label}</Label>}\n    </Layout>\n  )\n}\n\nexport default CellLayout\n","export type TableProps = {\n  data?: TableDataTypes[]\n  selectedFilters?: string\n  sortBy?: string\n  sortDir?: string\n  onSort?: (value: string) => void\n}\n\nexport type ColumnsDefTypes = {\n  id: number\n  label: string\n  name: string\n  sortable: boolean\n  background?: boolean\n}\n\nexport type ScrollBarProps = {\n  ref: string\n  width: number\n}\n\nexport type TableDataTypes = {\n  POOL: string\n  APR: string\n  EARNED: string\n  STAKED: string\n  DETAILS: string\n  LINKS: string\n}\n\nexport const MobileColumnSchema: ColumnsDefTypes[] = [\n  {\n    id: 1,\n    name: 'farm',\n    sortable: true,\n    label: '',\n  },\n  {\n    id: 2,\n    name: 'earned',\n    sortable: true,\n    label: 'Earned',\n    background: true,\n  },\n  {\n    id: 3,\n    name: 'apr',\n    sortable: true,\n    label: 'APR',\n    background: true,\n  },\n  {\n    id: 6,\n    name: 'details',\n    sortable: true,\n    label: '',\n  },\n]\n\nexport const DesktopColumnSchema: ColumnsDefTypes[] = [\n  {\n    id: 1,\n    name: 'farm',\n    sortable: true,\n    label: '',\n  },\n  {\n    id: 2,\n    name: 'earned',\n    sortable: true,\n    label: 'Earned',\n    background: true,\n  },\n  {\n    id: 3,\n    name: 'apr',\n    sortable: true,\n    label: 'APR',\n    background: true,\n  },\n  {\n    id: 4,\n    name: 'liquidity',\n    sortable: true,\n    label: 'Liquidity',\n    background: true,\n  },\n  {\n    id: 5,\n    name: 'multiplier',\n    sortable: true,\n    label: 'Multiplier',\n    background: true,\n  },\n  {\n    id: 6,\n    name: 'details',\n    sortable: true,\n    label: '',\n  },\n]\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\nimport { useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useDelayedUnmount from 'hooks/useDelayedUnmount'\nimport { useFarmUser } from 'state/farms/hooks'\n\nimport Apr, { AprProps } from './Apr'\nimport Farm, { FarmProps } from './Farm'\nimport Earned, { EarnedProps } from './Earned'\nimport Details from './Details'\nimport Multiplier, { MultiplierProps } from './Multiplier'\nimport Liquidity, { LiquidityProps } from './Liquidity'\nimport ActionPanel from './Actions/ActionPanel'\nimport CellLayout from './CellLayout'\nimport { DesktopColumnSchema, MobileColumnSchema } from '../types'\n\nexport interface RowProps {\n  apr: AprProps\n  farm: FarmProps\n  earned: EarnedProps\n  multiplier: MultiplierProps\n  liquidity: LiquidityProps\n  details: FarmWithStakedValue\n}\n\ninterface RowPropsWithLoading extends RowProps {\n  userDataReady: boolean\n}\n\nconst cells = {\n  apr: Apr,\n  farm: Farm,\n  earned: Earned,\n  details: Details,\n  multiplier: Multiplier,\n  liquidity: Liquidity,\n}\n\nconst CellInner = styled.div`\n  padding: 24px 0px;\n  display: flex;\n  width: 100%;\n  align-items: center;\n  padding-right: 8px;\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    padding-right: 32px;\n  }\n`\n\nconst StyledTr = styled.tr`\n  cursor: pointer;\n  border-bottom: 2px solid ${({ theme }) => theme.colors.cardBorder};\n`\n\nconst EarnedMobileCell = styled.td`\n  padding: 16px 0 24px 16px;\n`\n\nconst AprMobileCell = styled.td`\n  padding-top: 16px;\n  padding-bottom: 24px;\n`\n\nconst FarmMobileCell = styled.td`\n  padding-top: 24px;\n`\n\nconst Row: React.FunctionComponent<RowPropsWithLoading> = (props) => {\n  const { details, userDataReady } = props\n  const hasStakedAmount = !!useFarmUser(details.pid).stakedBalance.toNumber()\n  const [actionPanelExpanded, setActionPanelExpanded] = useState(hasStakedAmount)\n  const shouldRenderChild = useDelayedUnmount(actionPanelExpanded, 300)\n  const { t } = useTranslation()\n\n  const toggleActionPanel = () => {\n    setActionPanelExpanded(!actionPanelExpanded)\n  }\n\n  useEffect(() => {\n    setActionPanelExpanded(hasStakedAmount)\n  }, [hasStakedAmount])\n\n  const { isDesktop, isMobile } = useMatchBreakpoints()\n\n  const isSmallerScreen = !isDesktop\n  const tableSchema = isSmallerScreen ? MobileColumnSchema : DesktopColumnSchema\n  const columnNames = tableSchema.map((column) => column.name)\n\n  const handleRenderRow = () => {\n    if (!isMobile) {\n      return (\n        <StyledTr onClick={toggleActionPanel}>\n          {Object.keys(props).map((key) => {\n            const columnIndex = columnNames.indexOf(key)\n            if (columnIndex === -1) {\n              return null\n            }\n\n            switch (key) {\n              case 'details':\n                return (\n                  <td key={key}>\n                    <CellInner>\n                      <CellLayout>\n                        <Details actionPanelToggled={actionPanelExpanded} />\n                      </CellLayout>\n                    </CellInner>\n                  </td>\n                )\n              case 'apr':\n                return (\n                  <td key={key}>\n                    <CellInner>\n                      <CellLayout label={t('APR')} background={tableSchema[columnIndex].background} >\n                        <Apr {...props.apr} hideButton={isSmallerScreen} />\n                      </CellLayout>\n                    </CellInner>\n                  </td>\n                )\n              default:\n                return (\n                  <td key={key}>\n                    <CellInner>\n                      <CellLayout label={t(tableSchema[columnIndex].label)} background={tableSchema[columnIndex].background} >\n                        {React.createElement(cells[key], { ...props[key], userDataReady })}\n                      </CellLayout>\n                    </CellInner>\n                  </td>\n                )\n            }\n          })}\n        </StyledTr>\n      )\n    }\n\n    return (\n      <StyledTr onClick={toggleActionPanel}>\n        <td>\n          <tr>\n            <FarmMobileCell>\n              <CellLayout>\n                <Farm {...props.farm} />\n              </CellLayout>\n            </FarmMobileCell>\n          </tr>\n          <tr>\n            <EarnedMobileCell>\n              <CellLayout label={t('Earned')} background>\n                <Earned {...props.earned} userDataReady={userDataReady} />\n              </CellLayout>\n            </EarnedMobileCell>\n            <AprMobileCell>\n              <CellLayout label={t('APR')} background>\n                <Apr {...props.apr} hideButton />\n              </CellLayout>\n            </AprMobileCell>\n          </tr>\n        </td>\n        <td>\n          <CellInner>\n            <CellLayout>\n              <Details actionPanelToggled={actionPanelExpanded} />\n            </CellLayout>\n          </CellInner>\n        </td>\n      </StyledTr>\n    )\n  }\n\n  return (\n    <>\n      {handleRenderRow()}\n      {shouldRenderChild && (\n        <tr>\n          <td colSpan={6}>\n            <ActionPanel {...props} expanded={actionPanelExpanded} />\n          </td>\n        </tr>\n      )}\n    </>\n  )\n}\n\nexport default Row\n","import React, { useRef } from 'react'\nimport styled from 'styled-components'\nimport { useTable, Button, ChevronUpIcon, ColumnType } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nimport Row, { RowProps } from './Row'\n\nexport interface ITableProps {\n  data: RowProps[]\n  columns: ColumnType<RowProps>[]\n  userDataReady: boolean\n  sortColumn?: string\n}\n\nconst Container = styled.div`\n  filter: ${({ theme }) => theme.card.dropShadow};\n  width: 100%;\n  background: ${({ theme }) => theme.card.background};\n  border-radius: 16px;\n  margin: 16px 0px;\n`\n\nconst TableWrapper = styled.div`\n  overflow: visible;\n  scroll-margin-top: 64px;\n\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`\n\nconst StyledTable = styled.table`\n  border-collapse: collapse;\n  font-size: 14px;\n  border-radius: 4px;\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n`\n\nconst TableBody = styled.tbody`\n  & tr {\n    td {\n      font-size: 16px;\n      vertical-align: middle;\n    }\n  }\n`\n\nconst TableContainer = styled.div`\n  position: relative;\n`\n\nconst ScrollButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 5px;\n  padding-bottom: 5px;\n`\n\nconst FarmTable: React.FC<ITableProps> = (props) => {\n  const tableWrapperEl = useRef<HTMLDivElement>(null)\n  const { t } = useTranslation()\n  const { data, columns, userDataReady } = props\n\n  const { rows } = useTable(columns, data, { sortable: true, sortColumn: 'farm' })\n\n  const scrollToTop = (): void => {\n    tableWrapperEl.current.scrollIntoView({\n      behavior: 'smooth',\n    })\n  }\n\n  return (\n    <Container id=\"farms-table\">\n      <TableContainer>\n        <TableWrapper ref={tableWrapperEl}>\n          <StyledTable>\n            <TableBody>\n              {rows.map((row) => {\n                return <Row {...row.original} userDataReady={userDataReady} key={`table-row-${row.id}`} />\n              })}\n            </TableBody>\n          </StyledTable>\n        </TableWrapper>\n        <ScrollButtonContainer>\n          <Button variant=\"text\" onClick={scrollToTop}>\n            {t('To Top')}\n            <ChevronUpIcon color=\"primary\" />\n          </Button>\n        </ScrollButtonContainer>\n      </TableContainer>\n    </Container>\n  )\n}\n\nexport default FarmTable\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useLocation, Link, useRouteMatch } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem, NotificationDot } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface FarmTabButtonsProps {\n  hasStakeInFinishedFarms: boolean\n}\n\nconst FarmTabButtons: React.FC<FarmTabButtonsProps> = ({ hasStakeInFinishedFarms }) => {\n  const { url } = useRouteMatch()\n  const location = useLocation()\n  const { t } = useTranslation()\n\n  let activeIndex\n  switch (location.pathname) {\n    case '/farms':\n      activeIndex = 0\n      break\n    case '/farms/history':\n      activeIndex = 1\n      break\n    case '/farms/archived':\n      activeIndex = 2\n      break\n    default:\n      activeIndex = 0\n      break\n  }\n\n  return (\n    <Wrapper>\n      <ButtonMenu activeIndex={activeIndex} scale=\"xs\" variant=\"primary\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          {t('Live')}\n        </ButtonMenuItem>\n        <NotificationDot show={hasStakeInFinishedFarms}>\n          <ButtonMenuItem id=\"finished-farms-button\" as={Link} to={`${url}/history`}>\n            {t('Finished')}\n          </ButtonMenuItem>\n        </NotificationDot>\n      </ButtonMenu>\n    </Wrapper>\n  )\n}\n\nexport default FarmTabButtons\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  a {\n    padding-left: 12px;\n    padding-right: 12px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 16px;\n  }\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ListViewIcon, CardViewIcon, IconButton } from '@pancakeswap/uikit'\nimport { ViewMode } from 'state/user/actions'\n\ninterface ToggleViewProps {\n  viewMode: ViewMode\n  onToggle: (mode: ViewMode) => void\n}\n\nconst Container = styled.div`\n  margin-left: -8px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 0;\n  }\n`\n\nconst ToggleView: React.FunctionComponent<ToggleViewProps> = ({ viewMode, onToggle }) => {\n  const handleToggle = (mode: ViewMode) => {\n    if (viewMode !== mode) {\n      onToggle(mode)\n    }\n  }\n\n  return (\n    <Container>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickFarmCardView\" onClick={() => handleToggle(ViewMode.CARD)}>\n        <CardViewIcon color={viewMode === ViewMode.CARD ? 'primary' : 'textDisabled'} />\n      </IconButton>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickFarmTableView\" onClick={() => handleToggle(ViewMode.TABLE)}>\n        <ListViewIcon color={viewMode === ViewMode.TABLE ? 'primary' : 'textDisabled'} />\n      </IconButton>\n    </Container>\n  )\n}\n\nexport default ToggleView\n","import React, { useEffect, useCallback, useState, useMemo, useRef } from 'react'\nimport { Route, useRouteMatch, useLocation, NavLink } from 'react-router-dom'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Image, Heading, RowType, Toggle, Text, Button, ArrowForwardIcon, Flex, OptionProps } from '@pancakeswap/uikit'\nimport { ChainId } from '@pancakeswap/sdk'\nimport styled from 'styled-components'\nimport FlexLayout from 'components/Layout/Flex'\nimport Page from 'components/Layout/Page'\nimport Select from 'components/Select/Select'\nimport { useFarms, usePollFarmsWithUserData, usePriceCakeBusd, usePriceBlockBusd } from 'state/farms/hooks'\nimport useIntersectionObserver from 'hooks/useIntersectionObserver'\nimport { DeserializedFarm } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { BIG_TEN, BIG_ZERO } from 'utils/bigNumber'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { getFarmApr } from 'utils/apr'\nimport { orderBy } from 'lodash'\nimport isArchivedPid from 'utils/farmHelpers'\nimport { latinise } from 'utils/latinise'\nimport { useUserFarmStakedOnly, useUserFarmsViewMode } from 'state/user/hooks'\nimport { ViewMode } from 'state/user/actions'\nimport PageHeader from 'components/PageHeader'\nimport SearchInput from 'components/SearchInput'\nimport Loading from 'components/Loading'\nimport FarmCard, { FarmWithStakedValue } from './components/FarmCard/FarmCard'\nimport Table from './components/FarmTable/FarmTable'\nimport FarmTabButtons from './components/FarmTabButtons'\nimport { RowProps } from './components/FarmTable/Row'\nimport ToggleView from './components/ToggleView/ToggleView'\nimport { DesktopColumnSchema } from './components/types'\n\nconst ControlContainer = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  position: relative;\n\n  justify-content: space-between;\n  flex-direction: column;\n  margin-bottom: 32px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    flex-wrap: wrap;\n    padding: 16px 32px;\n    margin-bottom: 0;\n  }\n`\n\nconst ToggleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 10px;\n\n  ${Text} {\n    margin-left: 8px;\n  }\n`\n\nconst LabelWrapper = styled.div`\n  > ${Text} {\n    font-size: 12px;\n  }\n`\n\nconst FilterContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 8px 0px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n    padding: 0;\n  }\n`\n\nconst ViewControls = styled.div`\n  flex-wrap: wrap;\n  justify-content: space-between;\n  display: flex;\n  align-items: center;\n  width: 100%;\n\n  > div {\n    padding: 8px 0px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n    width: auto;\n\n    > div {\n      padding: 0;\n    }\n  }\n`\n\nconst StyledImage = styled(Image)`\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 58px;\n`\n\nexport interface FarmsProps {\n  tokenMode?: boolean\n}\n\nconst NUMBER_OF_FARMS_VISIBLE = 12\n\nconst getDisplayApr = (cakeRewardsApr?: number, lpRewardsApr?: number) => {\n  if (cakeRewardsApr && lpRewardsApr) {\n    return (cakeRewardsApr + lpRewardsApr).toLocaleString('en-US', { maximumFractionDigits: 2 })\n  }\n  if (cakeRewardsApr) {\n    return cakeRewardsApr.toLocaleString('en-US', { maximumFractionDigits: 2 })\n  }\n  return null\n}\n\nconst Farms: React.FC<FarmsProps> = (farmsProps) => {\n  const { path } = useRouteMatch()\n  const { pathname } = useLocation()\n  const { t } = useTranslation()\n  const { data: farmsLP, userDataLoaded } = useFarms()\n  const cakePrice = usePriceCakeBusd()\n  const blockPrice = usePriceBlockBusd()\n  const [query, setQuery] = useState('')\n  const [viewMode, setViewMode] = useUserFarmsViewMode()\n  const { account } = useWeb3React()\n  const [sortOption, setSortOption] = useState('hot')\n  const { observerRef, isIntersecting } = useIntersectionObserver()\n  const chosenFarmsLength = useRef(0)\n\n  const { tokenMode } = farmsProps\n\n  const isArchived = pathname.includes('archived')\n  const isInactive = pathname.includes('history')\n  const isActive = !isInactive && !isArchived\n\n  usePollFarmsWithUserData(isArchived)\n\n  // Users with no wallet connected should see 0 as Earned amount\n  // Connected users should see loading indicator until first userData has loaded\n  const userDataReady = !account || (!!account && userDataLoaded)\n\n  const [stakedOnly, setStakedOnly] = useUserFarmStakedOnly(isActive)\n\n  // const activeFarms = farmsLP.filter((farm) => farm.pid !== 0 && farm.multiplier !== '0X' && !isArchivedPid(farm.pid))\n  // const inactiveFarms = farmsLP.filter((farm) => farm.pid !== 0 && farm.multiplier === '0X' && !isArchivedPid(farm.pid))\n  const activeFarms = farmsLP.filter((farm) => !!farm.isTokenOnly === !!tokenMode && farm.multiplier !== '0X' && !isArchivedPid(farm.pid))\n  const inactiveFarms = farmsLP.filter((farm) => !!farm.isTokenOnly === !!tokenMode && farm.multiplier === '0X' && !isArchivedPid(farm.pid))\n\n  const archivedFarms = farmsLP.filter((farm) => isArchivedPid(farm.pid))\n\n  const stakedOnlyFarms = activeFarms.filter(\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\n  )\n\n  const stakedInactiveFarms = inactiveFarms.filter(\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\n  )\n\n  const stakedArchivedFarms = archivedFarms.filter(\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\n  )\n\n  const farmsList = useCallback(\n    (farmsToDisplay: DeserializedFarm[]): FarmWithStakedValue[] => {\n      let farmsToDisplayWithAPR: FarmWithStakedValue[] = farmsToDisplay.map((farm) => {\n        if (!farm.lpTotalInQuoteToken || !farm.quoteTokenPriceBusd) {\n          return farm\n        }\n\n        if (!farm.isTokenOnly) {\n          const totalLiquidity = new BigNumber(farm.lpTotalInQuoteToken).times(farm.quoteTokenPriceBusd)\n          const { cakeRewardsApr, lpRewardsApr } = isActive\n            ? getFarmApr(new BigNumber(farm.poolWeight), cakePrice, totalLiquidity, farm.lpAddresses[ChainId.MAINNET])\n            : { cakeRewardsApr: 0, lpRewardsApr: 0 }\n\n          return { ...farm, apr: cakeRewardsApr, lpRewardsApr, liquidity: totalLiquidity }\n        }\n\n          let totalLiquidity = new BigNumber(0)\n          let price =  new BigNumber(0)\n\n          if (farm.lpSymbol === \"HIGHLORD\") {\n            totalLiquidity = new BigNumber(farm.tokenBalance).div(BIG_TEN.pow(farm.token.decimals)).times(cakePrice)\n            price = cakePrice\n          } else if (farm.lpSymbol === \"BLOCK\") {\n            totalLiquidity = new BigNumber(farm.tokenBalance).div(BIG_TEN.pow(farm.token.decimals)).times(blockPrice)\n            price = blockPrice\n          } else {\n            totalLiquidity = new BigNumber(farm.tokenBalance).div(BIG_TEN.pow(farm.token.decimals)).times(farm.tokenPriceBusd)\n            price = new BigNumber(farm.tokenPriceBusd)\n            console.log('alex: farm = ', farm)\n            console.log('alex: tokenBalance = ', farm.tokenBalance.toNumber())\n            console.log('alex: tokenPriceBusd = ', farm.tokenPriceBusd)\n            console.log('alex: totalLiquidity = ', totalLiquidity.toNumber())\n\n          }\n\n          const { cakeRewardsApr, lpRewardsApr } = isActive\n            ? getFarmApr(new BigNumber(farm.poolWeight), price, totalLiquidity, farm.lpAddresses[ChainId.MAINNET])\n            : { cakeRewardsApr: 0, lpRewardsApr: 0 }\n\n          return { ...farm, apr: cakeRewardsApr, lpRewardsApr, liquidity: totalLiquidity }\n      })\n\n      if (query) {\n        const lowercaseQuery = latinise(query.toLowerCase())\n        farmsToDisplayWithAPR = farmsToDisplayWithAPR.filter((farm: FarmWithStakedValue) => {\n          return latinise(farm.lpSymbol.toLowerCase()).includes(lowercaseQuery)\n        })\n      }\n      return farmsToDisplayWithAPR\n    },\n    [cakePrice, blockPrice, query, isActive],\n  )\n\n  const handleChangeQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value)\n  }\n\n  const [numberOfFarmsVisible, setNumberOfFarmsVisible] = useState(NUMBER_OF_FARMS_VISIBLE)\n\n  const chosenFarmsMemoized = useMemo(() => {\n    let chosenFarms = []\n\n    const sortFarms = (farms: FarmWithStakedValue[]): FarmWithStakedValue[] => {\n      switch (sortOption) {\n        case 'apr':\n          return orderBy(farms, (farm: FarmWithStakedValue) => farm.apr + farm.lpRewardsApr, 'desc')\n        case 'multiplier':\n          return orderBy(\n            farms,\n            (farm: FarmWithStakedValue) => (farm.multiplier ? Number(farm.multiplier.slice(0, -1)) : 0),\n            'desc',\n          )\n        case 'earned':\n          return orderBy(\n            farms,\n            (farm: FarmWithStakedValue) => (farm.userData ? Number(farm.userData.earnings) : 0),\n            'desc',\n          )\n        case 'liquidity':\n          return orderBy(farms, (farm: FarmWithStakedValue) => Number(farm.liquidity), 'desc')\n        default:\n          return farms\n      }\n    }\n\n    if (isActive) {\n      chosenFarms = stakedOnly ? farmsList(stakedOnlyFarms) : farmsList(activeFarms)\n    }\n    if (isInactive) {\n      chosenFarms = stakedOnly ? farmsList(stakedInactiveFarms) : farmsList(inactiveFarms)\n    }\n    if (isArchived) {\n      chosenFarms = stakedOnly ? farmsList(stakedArchivedFarms) : farmsList(archivedFarms)\n    }\n\n    return sortFarms(chosenFarms).slice(0, numberOfFarmsVisible)\n  }, [\n    sortOption,\n    activeFarms,\n    farmsList,\n    inactiveFarms,\n    archivedFarms,\n    isActive,\n    isInactive,\n    isArchived,\n    stakedArchivedFarms,\n    stakedInactiveFarms,\n    stakedOnly,\n    stakedOnlyFarms,\n    numberOfFarmsVisible,\n  ])\n\n  chosenFarmsLength.current = chosenFarmsMemoized.length\n\n  useEffect(() => {\n    if (isIntersecting) {\n      setNumberOfFarmsVisible((farmsCurrentlyVisible) => {\n        if (farmsCurrentlyVisible <= chosenFarmsLength.current) {\n          return farmsCurrentlyVisible + NUMBER_OF_FARMS_VISIBLE\n        }\n        return farmsCurrentlyVisible\n      })\n    }\n  }, [isIntersecting])\n\n  const rowData = chosenFarmsMemoized.map((farm) => {\n    const { token, quoteToken } = farm\n    const tokenAddress = token.address\n    const quoteTokenAddress = quoteToken.address\n    const lpLabel = farm.lpSymbol && farm.lpSymbol.split(' ')[0].toUpperCase().replace('PANCAKE', '')\n\n    const row: RowProps = {\n      apr: {\n        value: getDisplayApr(farm.apr, farm.lpRewardsApr),\n        pid: farm.pid,\n        multiplier: farm.multiplier,\n        lpLabel,\n        lpSymbol: farm.lpSymbol,\n        tokenAddress,\n        quoteTokenAddress,\n        cakePrice,\n        originalValue: farm.apr,\n      },\n      farm: {\n        label: lpLabel,\n        pid: farm.pid,\n        token: farm.token,\n        quoteToken: farm.quoteToken,\n      },\n      earned: {\n        earnings: getBalanceNumber(new BigNumber(farm.userData.earnings)),\n        pid: farm.pid,\n      },\n      liquidity: {\n        liquidity: farm.liquidity,\n      },\n      multiplier: {\n        multiplier: farm.multiplier,\n      },\n      details: farm,\n    }\n\n    return row\n  })\n\n  const renderContent = (): JSX.Element => {\n    if (viewMode === ViewMode.TABLE && rowData.length) {\n      const columnSchema = DesktopColumnSchema\n\n      const columns = columnSchema.map((column) => ({\n        id: column.id,\n        name: column.name,\n        label: column.label,\n        sort: (a: RowType<RowProps>, b: RowType<RowProps>) => {\n          switch (column.name) {\n            case 'farm':\n              return b.id - a.id\n            case 'apr':\n              if (a.original.apr.value && b.original.apr.value) {\n                return Number(a.original.apr.value) - Number(b.original.apr.value)\n              }\n\n              return 0\n            case 'earned':\n              return a.original.earned.earnings - b.original.earned.earnings\n            default:\n              return 1\n          }\n        },\n        sortable: column.sortable,\n      }))\n\n      return <Table data={rowData} columns={columns} userDataReady={userDataReady} />\n    }\n\n    return (\n      <FlexLayout>\n        <Route exact path={`${path}`}>\n          {chosenFarmsMemoized.map((farm) => (\n            <FarmCard\n              key={farm.pid}\n              farm={farm}\n              displayApr={getDisplayApr(farm.apr, farm.lpRewardsApr)}\n              cakePrice={cakePrice}\n              account={account}\n              removed={false}\n            />\n          ))}\n        </Route>\n        <Route exact path={`${path}/history`}>\n          {chosenFarmsMemoized.map((farm) => (\n            <FarmCard\n              key={farm.pid}\n              farm={farm}\n              displayApr={getDisplayApr(farm.apr, farm.lpRewardsApr)}\n              cakePrice={cakePrice}\n              account={account}\n              removed\n            />\n          ))}\n        </Route>\n        <Route exact path={`${path}/archived`}>\n          {chosenFarmsMemoized.map((farm) => (\n            <FarmCard\n              key={farm.pid}\n              farm={farm}\n              displayApr={getDisplayApr(farm.apr, farm.lpRewardsApr)}\n              cakePrice={cakePrice}\n              account={account}\n              removed\n            />\n          ))}\n        </Route>\n      </FlexLayout>\n    )\n  }\n\n  const handleSortOptionChange = (option: OptionProps): void => {\n    setSortOption(option.value)\n  }\n\n  return (\n    <>\n      <Page>\n        <PageHeader>\n          <Heading as=\"h1\" scale=\"xxl\" color=\"textSubtle\" mb=\"24px\">\n            {tokenMode\n                ? t('Pools')\n                : t('Farms')\n            }\n          </Heading>\n          <Heading scale=\"lg\" color=\"textSubtle\" mb=\"20px\">\n            {tokenMode\n              ? t('Stake tokens to earn')\n              : t('Stake LP tokens to earn')\n            }\n          </Heading>\n          <Heading scale=\"lg\" color=\"textSubtle\" mb=\"20px\">\n             {t('Your Stake will be locked for 20 days')}\n          </Heading>\n        </PageHeader>\n        <ControlContainer>\n          <ViewControls>\n            <ToggleView viewMode={viewMode} onToggle={(mode: ViewMode) => setViewMode(mode)} />\n            <ToggleWrapper>\n              <Toggle\n                id=\"staked-only-farms\"\n                checked={stakedOnly}\n                onChange={() => setStakedOnly(!stakedOnly)}\n                scale=\"sm\"\n                text\n              />\n              <Text> {t('Staked only')}</Text>\n            </ToggleWrapper>\n            <FarmTabButtons hasStakeInFinishedFarms={stakedInactiveFarms.length > 0} />\n          </ViewControls>\n          <FilterContainer>\n            <LabelWrapper>\n              <Select\n                options={[\n                  {\n                    label: t('Hot'),\n                    value: 'hot',\n                  },\n                  {\n                    label: t('APR'),\n                    value: 'apr',\n                  },\n                  {\n                    label: t('Multiplier'),\n                    value: 'multiplier',\n                  },\n                  {\n                    label: t('Earned'),\n                    value: 'earned',\n                  },\n                  {\n                    label: t('Liquidity'),\n                    value: 'liquidity',\n                  },\n                ]}\n                onOptionChange={handleSortOptionChange}\n              />\n            </LabelWrapper>\n            <LabelWrapper style={{ marginLeft: 16 }}>\n              <SearchInput onChange={handleChangeQuery} placeholder=\"Search Farms\" />\n            </LabelWrapper>\n          </FilterContainer>\n        </ControlContainer>\n        {renderContent()}\n        {account && !userDataLoaded && stakedOnly && (\n          <Flex justifyContent=\"center\">\n            <Loading />\n          </Flex>\n        )}\n        <div ref={observerRef} />\n      </Page>\n    </>\n  )\n}\n\nexport default Farms\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar PropTypes = require('prop-types');\nvar React = require('react');\nvar warning = require('warning');\nvar CountUp$1 = require('countup.js');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar PropTypes__default = /*#__PURE__*/_interopDefaultLegacy(PropTypes);\nvar React__default = /*#__PURE__*/_interopDefaultLegacy(React);\nvar warning__default = /*#__PURE__*/_interopDefaultLegacy(warning);\nvar CountUp__default = /*#__PURE__*/_interopDefaultLegacy(CountUp$1);\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nvar createCountUpInstance = function createCountUpInstance(el, props) {\n  var decimal = props.decimal,\n      decimals = props.decimals,\n      duration = props.duration,\n      easingFn = props.easingFn,\n      end = props.end,\n      formattingFn = props.formattingFn,\n      prefix = props.prefix,\n      separator = props.separator,\n      start = props.start,\n      suffix = props.suffix,\n      useEasing = props.useEasing;\n  return new CountUp__default['default'](el, start, end, decimals, duration, {\n    decimal: decimal,\n    easingFn: easingFn,\n    formattingFn: formattingFn,\n    separator: separator,\n    prefix: prefix,\n    suffix: suffix,\n    useEasing: useEasing,\n    useGrouping: !!separator\n  });\n};\n\nvar CountUp = /*#__PURE__*/function (_Component) {\n  _inherits(CountUp, _Component);\n\n  var _super = _createSuper(CountUp);\n\n  function CountUp() {\n    var _this;\n\n    _classCallCheck(this, CountUp);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"checkProps\", function (updatedProps) {\n      var _this$props = _this.props,\n          start = _this$props.start,\n          suffix = _this$props.suffix,\n          prefix = _this$props.prefix,\n          redraw = _this$props.redraw,\n          duration = _this$props.duration,\n          separator = _this$props.separator,\n          decimals = _this$props.decimals,\n          decimal = _this$props.decimal,\n          className = _this$props.className;\n      var hasPropsChanged = duration !== updatedProps.duration || start !== updatedProps.start || suffix !== updatedProps.suffix || prefix !== updatedProps.prefix || separator !== updatedProps.separator || decimals !== updatedProps.decimals || decimal !== updatedProps.decimal || className !== updatedProps.className;\n      return hasPropsChanged || redraw;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"createInstance\", function () {\n      if (typeof _this.props.children === 'function') {\n        // Warn when user didn't use containerRef at all\n        warning__default['default'](_this.containerRef.current && (_this.containerRef.current instanceof HTMLElement || _this.containerRef.current instanceof SVGTextElement || _this.containerRef.current instanceof SVGTSpanElement), \"Couldn't find attached element to hook the CountUp instance into! Try to attach \\\"containerRef\\\" from the render prop to a an HTMLElement, eg. <span ref={containerRef} />.\");\n      }\n\n      return createCountUpInstance(_this.containerRef.current, _this.props);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"pauseResume\", function () {\n      var _assertThisInitialize = _assertThisInitialized(_this),\n          reset = _assertThisInitialize.reset,\n          start = _assertThisInitialize.restart,\n          update = _assertThisInitialize.update;\n\n      var onPauseResume = _this.props.onPauseResume;\n\n      _this.instance.pauseResume();\n\n      onPauseResume({\n        reset: reset,\n        start: start,\n        update: update\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"reset\", function () {\n      var _assertThisInitialize2 = _assertThisInitialized(_this),\n          pauseResume = _assertThisInitialize2.pauseResume,\n          start = _assertThisInitialize2.restart,\n          update = _assertThisInitialize2.update;\n\n      var onReset = _this.props.onReset;\n\n      _this.instance.reset();\n\n      onReset({\n        pauseResume: pauseResume,\n        start: start,\n        update: update\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"restart\", function () {\n      _this.reset();\n\n      _this.start();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"start\", function () {\n      var _assertThisInitialize3 = _assertThisInitialized(_this),\n          pauseResume = _assertThisInitialize3.pauseResume,\n          reset = _assertThisInitialize3.reset,\n          start = _assertThisInitialize3.restart,\n          update = _assertThisInitialize3.update;\n\n      var _this$props2 = _this.props,\n          delay = _this$props2.delay,\n          onEnd = _this$props2.onEnd,\n          onStart = _this$props2.onStart;\n\n      var run = function run() {\n        return _this.instance.start(function () {\n          return onEnd({\n            pauseResume: pauseResume,\n            reset: reset,\n            start: start,\n            update: update\n          });\n        });\n      }; // Delay start if delay prop is properly set\n\n\n      if (delay > 0) {\n        _this.timeoutId = setTimeout(run, delay * 1000);\n      } else {\n        run();\n      }\n\n      onStart({\n        pauseResume: pauseResume,\n        reset: reset,\n        update: update\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"update\", function (newEnd) {\n      var _assertThisInitialize4 = _assertThisInitialized(_this),\n          pauseResume = _assertThisInitialize4.pauseResume,\n          reset = _assertThisInitialize4.reset,\n          start = _assertThisInitialize4.restart;\n\n      var onUpdate = _this.props.onUpdate;\n\n      _this.instance.update(newEnd);\n\n      onUpdate({\n        pauseResume: pauseResume,\n        reset: reset,\n        start: start\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"containerRef\", /*#__PURE__*/React__default['default'].createRef());\n\n    return _this;\n  }\n\n  _createClass(CountUp, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props3 = this.props,\n          children = _this$props3.children,\n          delay = _this$props3.delay;\n      this.instance = this.createInstance(); // Don't invoke start if component is used as a render prop\n\n      if (typeof children === 'function' && delay !== 0) return; // Otherwise just start immediately\n\n      this.start();\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      var end = this.props.end;\n      return this.checkProps(nextProps) || end !== nextProps.end;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      // If duration, suffix, prefix, separator or start has changed\n      // there's no way to update the values.\n      // So we need to re-create the CountUp instance in order to\n      // restart it.\n      var _this$props4 = this.props,\n          end = _this$props4.end,\n          preserveValue = _this$props4.preserveValue;\n\n      if (this.checkProps(prevProps)) {\n        this.instance.reset();\n        this.instance = this.createInstance();\n        this.start();\n      } // Only end value has changed, so reset and and re-animate with the updated\n      // end value.\n\n\n      if (end !== prevProps.end) {\n        if (!preserveValue) {\n          this.instance.reset();\n        }\n\n        this.instance.update(end);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.timeoutId) {\n        clearTimeout(this.timeoutId);\n      }\n\n      this.instance.reset();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props5 = this.props,\n          children = _this$props5.children,\n          className = _this$props5.className,\n          style = _this$props5.style;\n      var containerRef = this.containerRef,\n          pauseResume = this.pauseResume,\n          reset = this.reset,\n          restart = this.restart,\n          update = this.update;\n\n      if (typeof children === 'function') {\n        return children({\n          countUpRef: containerRef,\n          pauseResume: pauseResume,\n          reset: reset,\n          start: restart,\n          update: update\n        });\n      }\n\n      return /*#__PURE__*/React__default['default'].createElement(\"span\", {\n        className: className,\n        ref: containerRef,\n        style: style\n      });\n    }\n  }]);\n\n  return CountUp;\n}(React.Component);\n\n_defineProperty(CountUp, \"propTypes\", {\n  decimal: PropTypes__default['default'].string,\n  decimals: PropTypes__default['default'].number,\n  delay: PropTypes__default['default'].number,\n  easingFn: PropTypes__default['default'].func,\n  end: PropTypes__default['default'].number.isRequired,\n  formattingFn: PropTypes__default['default'].func,\n  onEnd: PropTypes__default['default'].func,\n  onStart: PropTypes__default['default'].func,\n  prefix: PropTypes__default['default'].string,\n  redraw: PropTypes__default['default'].bool,\n  separator: PropTypes__default['default'].string,\n  start: PropTypes__default['default'].number,\n  startOnMount: PropTypes__default['default'].bool,\n  suffix: PropTypes__default['default'].string,\n  style: PropTypes__default['default'].object,\n  useEasing: PropTypes__default['default'].bool,\n  preserveValue: PropTypes__default['default'].bool\n});\n\n_defineProperty(CountUp, \"defaultProps\", {\n  decimal: '.',\n  decimals: 0,\n  delay: null,\n  duration: null,\n  easingFn: null,\n  formattingFn: null,\n  onEnd: function onEnd() {},\n  onPauseResume: function onPauseResume() {},\n  onReset: function onReset() {},\n  onStart: function onStart() {},\n  onUpdate: function onUpdate() {},\n  prefix: '',\n  redraw: false,\n  separator: '',\n  start: 0,\n  startOnMount: true,\n  suffix: '',\n  style: undefined,\n  useEasing: true,\n  preserveValue: false\n});\n\n// and just sets the innerHTML of the element.\n\nvar MOCK_ELEMENT = {\n  innerHTML: null\n};\n\nvar useCountUp = function useCountUp(props) {\n  var _props = _objectSpread2(_objectSpread2({}, CountUp.defaultProps), props);\n\n  var start = _props.start,\n      formattingFn = _props.formattingFn;\n\n  var _useState = React.useState(typeof formattingFn === 'function' ? formattingFn(start) : start),\n      _useState2 = _slicedToArray(_useState, 2),\n      count = _useState2[0],\n      setCount = _useState2[1];\n\n  var countUpRef = React.useRef(null);\n  var timerRef = React.useRef(null);\n\n  var createInstance = function createInstance() {\n    var countUp = createCountUpInstance(MOCK_ELEMENT, _props);\n    var formattingFnRef = countUp.options.formattingFn;\n\n    countUp.options.formattingFn = function () {\n      var result = formattingFnRef.apply(void 0, arguments);\n      setCount(result);\n    };\n\n    return countUp;\n  };\n\n  var getCountUp = function getCountUp() {\n    var countUp = countUpRef.current;\n\n    if (countUp !== null) {\n      return countUp;\n    }\n\n    var newCountUp = createInstance();\n    countUpRef.current = newCountUp;\n    return newCountUp;\n  };\n\n  var reset = function reset() {\n    var onReset = _props.onReset;\n    getCountUp().reset();\n    onReset({\n      pauseResume: pauseResume,\n      start: restart,\n      update: update\n    });\n  };\n\n  var restart = function restart() {\n    var onStart = _props.onStart,\n        onEnd = _props.onEnd;\n    getCountUp().reset();\n    getCountUp().start(function () {\n      onEnd({\n        pauseResume: pauseResume,\n        reset: reset,\n        start: restart,\n        update: update\n      });\n    });\n    onStart({\n      pauseResume: pauseResume,\n      reset: reset,\n      update: update\n    });\n  };\n\n  var pauseResume = function pauseResume() {\n    var onPauseResume = _props.onPauseResume;\n    getCountUp().pauseResume();\n    onPauseResume({\n      reset: reset,\n      start: restart,\n      update: update\n    });\n  };\n\n  var update = function update(newEnd) {\n    var onUpdate = _props.onUpdate;\n    getCountUp().update(newEnd);\n    onUpdate({\n      pauseResume: pauseResume,\n      reset: reset,\n      start: restart\n    });\n  };\n\n  React.useEffect(function () {\n    var delay = _props.delay,\n        onStart = _props.onStart,\n        onEnd = _props.onEnd,\n        startOnMount = _props.startOnMount;\n\n    if (startOnMount) {\n      timerRef.current = setTimeout(function () {\n        onStart({\n          pauseResume: pauseResume,\n          reset: reset,\n          update: update\n        });\n        getCountUp().start(function () {\n          clearTimeout(timerRef.current);\n          onEnd({\n            pauseResume: pauseResume,\n            reset: reset,\n            start: restart,\n            update: update\n          });\n        });\n      }, delay * 1000);\n    }\n\n    return function () {\n      clearTimeout(timerRef.current);\n      reset();\n    };\n  }, []);\n  return {\n    countUp: count,\n    start: restart,\n    pauseResume: pauseResume,\n    reset: reset,\n    update: update\n  };\n};\n\nexports.default = CountUp;\nexports.useCountUp = useCountUp;\n","!function(a,n){\"function\"==typeof define&&define.amd?define(n):\"object\"==typeof exports?module.exports=n(require,exports,module):a.CountUp=n()}(this,function(a,n,t){var e=function(a,n,t,e,i,r){function o(a){var n,t,e,i,r,o,s=a<0;if(a=Math.abs(a).toFixed(l.decimals),a+=\"\",n=a.split(\".\"),t=n[0],e=n.length>1?l.options.decimal+n[1]:\"\",l.options.useGrouping){for(i=\"\",r=0,o=t.length;r<o;++r)0!==r&&r%3===0&&(i=l.options.separator+i),i=t[o-r-1]+i;t=i}return l.options.numerals.length&&(t=t.replace(/[0-9]/g,function(a){return l.options.numerals[+a]}),e=e.replace(/[0-9]/g,function(a){return l.options.numerals[+a]})),(s?\"-\":\"\")+l.options.prefix+t+e+l.options.suffix}function s(a,n,t,e){return t*(-Math.pow(2,-10*a/e)+1)*1024/1023+n}function u(a){return\"number\"==typeof a&&!isNaN(a)}var l=this;if(l.version=function(){return\"1.9.3\"},l.options={useEasing:!0,useGrouping:!0,separator:\",\",decimal:\".\",easingFn:s,formattingFn:o,prefix:\"\",suffix:\"\",numerals:[]},r&&\"object\"==typeof r)for(var m in l.options)r.hasOwnProperty(m)&&null!==r[m]&&(l.options[m]=r[m]);\"\"===l.options.separator?l.options.useGrouping=!1:l.options.separator=\"\"+l.options.separator;for(var d=0,c=[\"webkit\",\"moz\",\"ms\",\"o\"],f=0;f<c.length&&!window.requestAnimationFrame;++f)window.requestAnimationFrame=window[c[f]+\"RequestAnimationFrame\"],window.cancelAnimationFrame=window[c[f]+\"CancelAnimationFrame\"]||window[c[f]+\"CancelRequestAnimationFrame\"];window.requestAnimationFrame||(window.requestAnimationFrame=function(a,n){var t=(new Date).getTime(),e=Math.max(0,16-(t-d)),i=window.setTimeout(function(){a(t+e)},e);return d=t+e,i}),window.cancelAnimationFrame||(window.cancelAnimationFrame=function(a){clearTimeout(a)}),l.initialize=function(){return!!l.initialized||(l.error=\"\",l.d=\"string\"==typeof a?document.getElementById(a):a,l.d?(l.startVal=Number(n),l.endVal=Number(t),u(l.startVal)&&u(l.endVal)?(l.decimals=Math.max(0,e||0),l.dec=Math.pow(10,l.decimals),l.duration=1e3*Number(i)||2e3,l.countDown=l.startVal>l.endVal,l.frameVal=l.startVal,l.initialized=!0,!0):(l.error=\"[CountUp] startVal (\"+n+\") or endVal (\"+t+\") is not a number\",!1)):(l.error=\"[CountUp] target is null or undefined\",!1))},l.printValue=function(a){var n=l.options.formattingFn(a);\"INPUT\"===l.d.tagName?this.d.value=n:\"text\"===l.d.tagName||\"tspan\"===l.d.tagName?this.d.textContent=n:this.d.innerHTML=n},l.count=function(a){l.startTime||(l.startTime=a),l.timestamp=a;var n=a-l.startTime;l.remaining=l.duration-n,l.options.useEasing?l.countDown?l.frameVal=l.startVal-l.options.easingFn(n,0,l.startVal-l.endVal,l.duration):l.frameVal=l.options.easingFn(n,l.startVal,l.endVal-l.startVal,l.duration):l.countDown?l.frameVal=l.startVal-(l.startVal-l.endVal)*(n/l.duration):l.frameVal=l.startVal+(l.endVal-l.startVal)*(n/l.duration),l.countDown?l.frameVal=l.frameVal<l.endVal?l.endVal:l.frameVal:l.frameVal=l.frameVal>l.endVal?l.endVal:l.frameVal,l.frameVal=Math.round(l.frameVal*l.dec)/l.dec,l.printValue(l.frameVal),n<l.duration?l.rAF=requestAnimationFrame(l.count):l.callback&&l.callback()},l.start=function(a){l.initialize()&&(l.callback=a,l.rAF=requestAnimationFrame(l.count))},l.pauseResume=function(){l.paused?(l.paused=!1,delete l.startTime,l.duration=l.remaining,l.startVal=l.frameVal,requestAnimationFrame(l.count)):(l.paused=!0,cancelAnimationFrame(l.rAF))},l.reset=function(){l.paused=!1,delete l.startTime,l.initialized=!1,l.initialize()&&(cancelAnimationFrame(l.rAF),l.printValue(l.startVal))},l.update=function(a){if(l.initialize()){if(a=Number(a),!u(a))return void(l.error=\"[CountUp] update() - new endVal is not a number: \"+a);l.error=\"\",a!==l.frameVal&&(cancelAnimationFrame(l.rAF),l.paused=!1,delete l.startTime,l.startVal=l.frameVal,l.endVal=a,l.countDown=l.startVal>l.endVal,l.rAF=requestAnimationFrame(l.count))}},l.initialize()&&l.printValue(l.startVal)};return e});"],"sourceRoot":""}